{"version":3,"sources":["Components/Stepper.tsx","Components/UploadButton.tsx","Components/Loader.tsx","Components/Slider.tsx","Components/ThicknessSlider.tsx","Components/PaletteSizeSlider.tsx","Components/Footer.tsx","Components/NavBar.tsx","Components/CanvasCard.tsx","Components/ColorComponent.tsx","Hooks/UseOpenCV.tsx","Pointillism/tools.ts","Pointillism/colorTools.ts","Pointillism/palette.ts","Pointillism/imageProcessingTool.ts","Pointillism/gradient.ts","Pointillism/pointillism.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Stepper","steps","currentStep","useState","stepIndex","setStepIndex","useEffect","stpIndex","findIndex","step","className","map","index","UploadButton","onChange","fill","xmlns","viewBox","d","type","accept","Loader","width","height","version","id","x","y","enableBackground","attributeName","attributeType","dur","from","to","repeatCount","Slider","value","min","max","event","target","ThicknessSlider","PaletteSizeSlider","Footer","NavBar","aria-label","rel","href","CanvasCard","toggleCanvas","title","canvasId","collapsible","collapse","refCanvas","useRef","refA","checked","ref","onClick","current","dataURL","toDataURL","download","replace","window","open","ColorComponent","hue","saturation","onChangeHue","onChangeSaturation","parseInt","UseOpenCV","openCVLoaded","setOpenCVLoaded","cv","onRuntimeInitialized","getRandomIntInclusive","Math","ceil","floor","random","mod","n","m","generateRandomGrid","scale","ratio","grid","i","j","push","shuffle","rangeOfPixels","image","slice","col","row","ucharPtr","colorSelect","probabilities","palette","r","bisect_left","length","computeColorProbabilities","pixels","k","distances","arrayDist","maxima","arrayMax","summ","subArray","sum","divideArray","expArray","cumulativeSum","array1","array2","point1","point2","x1","y1","z1","x2","y2","z2","sqrt","distance","array","a","b","arrayVal","val","exp","saturate","lightness","rotateHue","rotation","generateColorPalette","paletteSize","colorThief","ColorThief","getPalette","extendPalette","saturationLevel","hueLevel","moreSaturatedPalette","red","green","blue","convert","rgb","hsl","moreSaturated","moreHuePaletteGenerator","newHue","drawPalette","canvas","document","getElementById","getContext","Error","context","nbBaseColor","widthColor","heightColor","yMax","fillStyle","fillRect","resizeWithRatio","maxWidth","maxHeight","cols","rows","size","Size","dst","Mat","resize","INTER_AREA","toGray","imageSource","grey","CV_8UC4","cvtColor","COLOR_RGB2GRAY","createGradient","thicknessBrush","divideByNumber","data","dstX","dstY","Scharr","CV_32F","BORDER_DEFAULT","dstxDiv","matFromArray","data32F","dstyDiv","delete","smooth","fieldX","fieldY","radius","iterations","s","ksize","GaussianBlur","direction","atan2","floatAt","magnitude","hypot","radiansToDegrees","radians","PI","CANVAS_IDS","ProcessStateMachineArray","generatePalette","imgElement","delay","Promise","resolve","setTimeout","generateGreyImage","src","imshow","generateGradiant","gradiants","generateSmoothGradiant","dstx","dsty","gradientSmoothingRadius","round","gradientSmooths","generateBlurMedian","medianBlur","zeros","drawPointillism","dstxSmooth","dstySmooth","batchSize","maxSize","strokeScaleDivider","strokeScale","range","forEach","progressIndex","colorProbabilities","color","angle","scalar","Scalar","ellipse","Point","LINE_AA","autoResize","progressCallback","imread","TITLE_FROM_CANVAS_IDS","initialCanvasCollapse","App","refFinalResult","progress","setProgress","validForm","setValidForm","autoresize","setAutoresize","runAlgo","setRunAlgo","setThicknessBrush","setPaletteSize","setHue","setSaturation","visibilityCanvas","setVisibilityCanvas","loadImage","files","URL","createObjectURL","submit","newVisibiltyCanvas","computePointillism","then","scrollIntoView","behavior","strokeLinecap","strokeLinejoin","strokeWidth","content","MAX_THICKNESS_BRUSH","old","disabled","renderForm","alt","onLoad","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e8cd555.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { findIndex } from \"lodash\";\n\ninterface StepperInterface {\n  steps: string[];\n  currentStep: string;\n}\n\nfunction Stepper({ steps, currentStep }: StepperInterface): React.ReactElement {\n  const [stepIndex, setStepIndex] = useState<number>(0);\n  \n  useEffect(()=> {\n    const stpIndex = findIndex(steps, (step) => step === currentStep);\n    if(stpIndex === -1) {\n      setStepIndex(0);\n    } else {\n      setStepIndex(stpIndex);\n    }\n  }, [currentStep]);\n\n  return (\n    <ul className=\"steps w-full overflow-auto\">\n      {\n        steps.map((step, index) => {\n          if(index <= stepIndex) {\n            return (\n              <li key={step} className=\"step step-primary text-neutral-content\">\n                <span className=\"hidden lg:block xl:block 2xl:block\">{step}</span>\n              </li>\n            );\n          }\n          return (\n            <li key={step} className=\"step text-neutral-content\">\n              <span className=\"hidden lg:block xl:block 2xl:block\">{step}</span>\n            </li>\n            );\n        })\n      }\n    </ul>\n  );\n}\n\nexport default Stepper;\n\n\n","import React from 'react';\n\ninterface UploadButtonInterface {\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nfunction UploadButton({ onChange } : UploadButtonInterface): React.ReactElement {\n  return (\n      <label className=\"w-full flex flex-col items-center px-4 py-6 bg-white text-primary rounded-lg shadow-lg tracking-wide uppercase border-2 border-primary transition duration-300 ease-in-out bg-opacity-50 cursor-pointer hover:bg-primary hover:text-white\">\n        <svg className=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n          <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n        </svg>\n        <span className=\"mt-2 leading-normal\">Select a picture</span>\n        <input type='file' accept=\"image/*\" className=\"hidden\" onChange={onChange} />\n      </label>\n    \n  );\n}\n\nexport default UploadButton;\n\n\n","import React from 'react';\n\ninterface LoaderInterface {\n  width?: string;\n  height?: string;\n}\n\nfunction Loader({ width = \"w-28\", height = \"w-28\"} : LoaderInterface): React.ReactElement {\n  return (\n    <svg className={`${width} ${height}`} version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" >\n      <path fill=\"white\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n        <animateTransform \n           attributeName=\"transform\" \n           attributeType=\"XML\" \n           type=\"rotate\"\n           dur=\"1s\" \n           from=\"0 50 50\"\n           to=\"360 50 50\" \n           repeatCount=\"indefinite\" />\n    </path>\n  </svg>\n  );\n}\n\nexport default Loader;\n\n\n","import React from 'react';\n\ninterface SliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n  step?: number\n}\n\nfunction Slider({ value, onChange, min = 1, max = 100, step = 1 } : SliderInterface): React.ReactElement {\n  return (\n   <input type=\"range\" onChange={(event) => onChange(event.target.value)} min={min} max={max} value={value} step={step} className=\"range range-primary\"></input> \n  );\n}\n\nexport default Slider;\n","import React from 'react';\nimport Slider from \"./Slider\";\n\ninterface ThicknessSliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n}\n\nfunction ThicknessSlider({ value, onChange, min = 1, max = 100 } : ThicknessSliderInterface): React.ReactElement {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between\">\n        <label>More Artistic</label>\n        <label>More Realistic</label>\n      </div>\n      <Slider value={value} onChange={onChange} min={min} max={max} step={1}/>\n      <span>{value}</span>\n   </div>\n  );\n}\n\nexport default ThicknessSlider;\n","import React from 'react';\nimport Slider from \"./Slider\";\n\ninterface PaletteSizeSliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n}\n\nfunction PaletteSizeSlider({ value, onChange } : PaletteSizeSliderInterface): React.ReactElement {\n  return (\n    <div className=\"w-full\">\n      <label>Palette Size</label>\n      <Slider value={value} onChange={onChange} min={5} max={20} step={1}/>\n      <span>{value}</span>\n   </div>\n  );\n}\n\nexport default PaletteSizeSlider;\n","import React from 'react';\n\nfunction Footer(): React.ReactElement {\n  return (\n    <footer className=\"p-4 footer bg-base-300 text-base-content footer-center p-6\">\n      <div>\n        <p> 2021 - Made By Guillaume Gomez</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction NavBar(): React.ReactElement {\n  return (\n     <div className=\"navbar mb-2 bg-neutral-focus text-neutral-content p-6\">\n      <div className=\"px-2 mx-2 navbar-start\">\n        <span className=\"text-2xl font-bold\">\n          Pointillism\n        </span>\n      </div> \n      <div className=\"navbar-end\">\n        <a aria-label=\"Github\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/guillaume-gomez/to-pointillism\" className=\"btn btn-square btn-ghost\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"inline-block w-6 h-6 fill-current\"><path d=\"M256,32C132.3,32,32,134.9,32,261.7c0,101.5,64.2,187.5,153.2,217.9a17.56,17.56,0,0,0,3.8.4c8.3,0,11.5-6.1,11.5-11.4,0-5.5-.2-19.9-.3-39.1a102.4,102.4,0,0,1-22.6,2.7c-43.1,0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1,1.4-14.1h.1c22.5,2,34.3,23.8,34.3,23.8,11.2,19.6,26.2,25.1,39.6,25.1a63,63,0,0,0,25.6-6c2-14.8,7.8-24.9,14.2-30.7-49.7-5.8-102-25.5-102-113.5,0-25.1,8.7-45.6,23-61.6-2.3-5.8-10-29.2,2.2-60.8a18.64,18.64,0,0,1,5-.5c8.1,0,26.4,3.1,56.6,24.1a208.21,208.21,0,0,1,112.2,0c30.2-21,48.5-24.1,56.6-24.1a18.64,18.64,0,0,1,5,.5c12.2,31.6,4.5,55,2.2,60.8,14.3,16.1,23,36.6,23,61.6,0,88.2-52.4,107.6-102.3,113.3,8,7.1,15.2,21.1,15.2,42.5,0,30.7-.3,55.5-.3,63,0,5.4,3.1,11.5,11.4,11.5a19.35,19.35,0,0,0,4-.4C415.9,449.2,480,363.1,480,261.7,480,134.9,379.7,32,256,32Z\"></path></svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useRef } from 'react';\n\ninterface CanvasCardInterface {\n  toggleCanvas: () => void;\n  title: string;\n  canvasId: string;\n  collapsible: boolean;\n  collapse: boolean;\n}\n\nfunction CanvasCard({ toggleCanvas, title, canvasId, collapsible, collapse }: CanvasCardInterface): React.ReactElement {\n  const refCanvas = useRef<HTMLCanvasElement>(null);\n  const refA = useRef<HTMLAnchorElement>(null);\n\n  function saveImage() {\n    if(refCanvas.current && refA.current) {\n      const dataURL = refCanvas.current.toDataURL(\"image/png\");\n      (refA.current as any).download = \"image.png\";\n      refA.current.href = dataURL.replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n      window.open('about:blank','image from canvas');\n    }\n  }\n\n  return (\n    <div className={`bg-neutral text-neutral-content collapse w-full border rounded-box border-base-300 collapse-arrow ${collapsible ? \"\" : \"collapse-close\"}`}>\n      <input type=\"checkbox\" checked={collapse} onChange={() => toggleCanvas()}/>\n      <div className=\"collapse-title text-xl font-medium\">\n        {title}\n      </div>\n      <div className=\"collapse-content flex flex-col justify-center gap-3\"> \n        <canvas ref={refCanvas} className={`max-w-full`} id={canvasId}/>\n        <div>\n          <div className=\"flex flex-row-reverse\">\n            <a ref={refA} className=\"btn btn-primary\" onClick={saveImage}>Save</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CanvasCard;\n\n\n","import React from 'react';\nimport Slider from \"./Slider\";\n\ninterface ColorComponentInterface {\n  hue: number;\n  saturation: number;\n  onChangeHue: (value: number) => void;\n  onChangeSaturation: (value: number) => void;\n}\n\nfunction ColorComponent({hue, saturation, onChangeHue, onChangeSaturation } : ColorComponentInterface): React.ReactElement {\n  return (\n    <details className=\"w-full\">\n      <summary>Advanced palette settings</summary>\n      <div className=\"flex flex-col gap-5\">\n        <div>\n          <label>Hue Level</label>\n          <Slider value={hue} onChange={(value) => onChangeHue(parseInt(value, 10))} min={0} max={360} />\n          <p>{hue}</p>\n          <span className=\"text-sm\">Hue level will change the second row in the palette</span>\n        </div>\n        <div>\n          <label>Saturation Level</label>\n          <Slider value={saturation} onChange={(value) => onChangeSaturation(parseInt(value, 10))} min={0} max={100} />\n          <p>{saturation}</p>\n          <span className=\"text-sm\">Saturation level will change the third and the fourth rows in the palette </span>\n        </div>\n      </div>\n    </details>\n  );\n}\n\nexport default ColorComponent;\n","import cv from \"opencv-ts\";\nimport { useEffect, useState } from 'react';\n\ninterface UseOpenCVInterface {\n  openCVLoaded : boolean;\n  cv: any;\n}\n\nfunction UseOpenCV(): UseOpenCVInterface {\n  const [openCVLoaded, setOpenCVLoaded] = useState<boolean>(false);\n  \n  useEffect(() => {\n    cv.onRuntimeInitialized = () => setOpenCVLoaded(true)\n  }, [setOpenCVLoaded]);\n\n  return { openCVLoaded, cv };\n}\n\nexport default UseOpenCV;\n","import { Mat } from \"opencv-ts\";\nimport { shuffle, max, sum } from \"lodash\";\nimport { bisect_left } from \"aureooms-js-bisect\";\n\ntype pixel = [number, number, number];\n\nfunction getRandomIntInclusive(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\n// https://web.archive.org/web/20090717035140if_/javascript.about.com/od/problemsolving/a/modulobug.htm\nfunction mod(n : number, m: number) : number {\n  return ((n % m) + m) % m;\n}\n\nexport function generateRandomGrid(width: number, height: number, scale: number = 3) {\n  const ratio = (scale / 2) >> 0;\n  let grid : Array<any> = [];\n\n  for(let i = 0; i < height; i = i + scale) {\n    for(let j = 0; j < width; j = j + scale) {\n      const y = getRandomIntInclusive(-ratio, ratio) + i;\n      const x = getRandomIntInclusive(-ratio, ratio) + j;\n\n      grid.push([mod(y, height), mod(x, width)])\n    }\n  }\n  return shuffle(grid);\n}\n\nexport function rangeOfPixels(image: Mat, grid: Array<[number, number]>, min: number, max: number ) : pixel[] {\n  return grid.slice(min, max).map(([col, row]) => image.ucharPtr(col, row) as pixel)\n}\n\n\nexport function colorSelect(probabilities : number[], palette : pixel[]): pixel {\n  const r = Math.random();\n  const index : number = bisect_left(probabilities, r);\n\n  if(index < palette.length) {\n    return palette[index];\n  } else {\n    return palette[palette.length - 1];\n  }\n}\n\nexport function computeColorProbabilities(pixels: pixel[], palette: pixel[], k=9) : number[][] {\n  let distances = arrayDist(pixels, palette);\n  const maxima = arrayMax(distances);\n\n  distances = subArray(maxima, distances);\n  let summ = distances.map(row => sum(row));\n  distances = divideArray(summ, distances);\n\n  distances = expArray(k*palette.length, distances);\n  summ = distances.map(row => sum(row));\n  distances = divideArray(summ, distances);\n\n  return cumulativeSum(distances);\n}\n\n\nfunction distance([x1, y1, z1]: pixel, [x2, y2, z2]: pixel): number {\n  return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2 + (z1 - z2) ** 2);\n}\n\nfunction arrayDist(array1: pixel[], array2: pixel[]) : number[][] {\n  return array1.map( (point1) =>\n    array2.map( (point2) => \n      distance(point1, point2)\n    )\n  );\n}\n\nfunction arrayMax(array: number[][]) : number[] {\n  return array.map((subArray) => max(subArray) as number);\n}\n\n\n\nfunction subArray(a: number[], b: number[][]) : number[][] {\n  return b.map((arrayVal, index) => \n    arrayVal.map(val =>\n      (a[index] - val)\n    )\n  );\n}\n\nfunction divideArray(a: number[], b: number[][]) : number[][] {\n  return b.map((arrayVal, index) => \n    arrayVal.map(val =>\n      ( val / a[index])\n    )\n  );\n}\n\nfunction expArray(a: number, b: number[][]) : number[][] {\n  return b.map((arrayVal) => \n    arrayVal.map(val =>\n       Math.exp(val * a)\n    )\n  );\n}\n\nfunction cumulativeSum(array: number[][]) : number[][] {\n  const cumulativeSumOP = ((sum: number) => (value:number) => sum += value);\n  return array.map(row =>\n     row.map(cumulativeSumOP(0))\n  );\n}","type colorType = [number, number, number];\n\n\nexport function saturate([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, Math.min(100, saturation + x), lightness];\n}\n\n\nexport function desaturate([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, Math.max(0, saturation - x), lightness];\n}\n\n\nexport function lighten([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, saturation, Math.min(100, lightness + x)];\n}\n\n\nexport function darken([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, saturation, Math.max(0, lightness - x)];\n}\n\nexport function rotateHue([hue, saturation, lightness]: colorType, rotation: number) : colorType {\n  const modulo = (x: number, n: number) : number => (x % n + n) % n;\n  const newHue = modulo(hue + rotation, 360);\n  return [newHue, saturation, lightness];\n}","import ColorThief from 'colorthief';\nimport convert from \"color-convert\";\nimport { saturate, rotateHue } from \"./colorTools\";\n\nconst PALETTE_BASE_COLOR = 20;\nexport type pixel = [number, number, number];\n\nexport function generateColorPalette(image: HTMLImageElement, paletteSize: number  = PALETTE_BASE_COLOR) : pixel[] {\n  let colorThief = new ColorThief();\n  return colorThief.getPalette(image, paletteSize);\n}\n\nexport function extendPalette(palette: pixel[], saturationLevel: number = 20, hueLevel: number = 20 ) : pixel[] {\n  const moreSaturatedPalette = palette.map(([red, green, blue]) => {\n    const [hue, saturation, lightness] = convert.rgb.hsl(red, green, blue);\n    const [_, moreSaturated, __] = saturate([hue, saturation, lightness], saturationLevel);\n    return convert.hsl.rgb([hue, moreSaturated, lightness]);\n  });\n\n  function moreHuePaletteGenerator() {\n    return palette.map(([red, green, blue]) => {\n      const random = Math.random() * (hueLevel - -hueLevel) + -hueLevel;\n      \n      const [hue, saturation, lightness] = convert.rgb.hsl(red, green, blue);\n      const [newHue, _, __] = rotateHue([hue, saturation, lightness], random);\n      return convert.hsl.rgb([newHue, saturation, lightness]);\n    });\n  }\n  return [...palette.slice(0), ...moreSaturatedPalette, ...moreHuePaletteGenerator(), ...moreHuePaletteGenerator()];\n}\n\nexport function drawPalette(canvasId: string, palette: pixel[]) : void {\n  let canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n  if (!canvas.getContext) {\n    throw new Error(\"cannot find canvas to draw palette\");\n  }\n  let context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n  const nbBaseColor = palette.length / 4; // original palette + 3 more palettes\n  \n  const widthColor = canvas.width / nbBaseColor;\n  const heightColor = widthColor;\n\n  const yMax = palette.length / nbBaseColor;\n\n  for(let y = 0; y < yMax; ++y) {\n    for(let x = 0; x < nbBaseColor; ++x) {\n      const [red, green, blue] = palette[x + y * nbBaseColor];\n      context.fillStyle = `rgb(${red}, ${green}, ${blue})`;\n      context.fillRect(widthColor * x, heightColor * y, widthColor, heightColor);\n    }\n  }\n}","import cv, { Mat, Size } from \"opencv-ts\";\n\nexport function resize(image: Mat, width: number, height: number) : Mat {\n  const newImage: Mat = new cv.Mat(image.cols, image.rows, cv.CV_8UC4);\n  cv.resize(image, newImage, new cv.Size(width, height), 0, 0, cv.INTER_AREA);\n  return newImage;\n}\n\nexport function resizeWithRatio(image: Mat, maxWidth: number, maxHeight: number) : Mat {\n  if (maxWidth === 0) {\n    throw new Error(\"resize : maxWidth is equal to zero. Please fill a value > 0\");\n  }\n\n  if (maxHeight === 0) {\n    throw new Error(\"resize : maxHeight is equal to zero. Please fill a value > 0\");\n  }\n\n  const ratio = Math.min(1.0, maxWidth / image.cols, maxHeight / image.rows);\n\n  if(ratio !== 1.0) {\n    const size : Size = new cv.Size(image.cols * ratio, image.rows * ratio);\n    let dst = new cv.Mat();\n    cv.resize(image, dst, size, 0, 0, cv.INTER_AREA);\n    return dst;\n  }\n\n  return image\n}\n\nexport function toGray(imageSource: Mat) : Mat {\n  let grey: Mat = new cv.Mat(imageSource.cols, imageSource.rows, cv.CV_8UC4);\n  cv.cvtColor(imageSource, grey, cv.COLOR_RGB2GRAY)\n  return grey;\n}\n\n","import cv, { Mat } from \"opencv-ts\";\n\n// thickness brush has a value from 1 to 15.36\nexport function createGradient(grey: Mat, thicknessBrush: number) : [Mat, Mat] {\n  function divideByNumber(data: number[], x: number) : number[] {\n    return data.map(d => d/x);\n  }\n\n  let dstX = new cv.Mat();\n  let dstY = new cv.Mat();\n  cv.Scharr(grey, dstX, cv.CV_32F, 1, 0, 1, 0, cv.BORDER_DEFAULT);\n  cv.Scharr(grey, dstY, cv.CV_32F, 0, 1, 1, 0, cv.BORDER_DEFAULT);\n\n  const dstxDiv = cv.matFromArray(dstX.rows, dstX.cols, cv.CV_32F, divideByNumber(dstX.data32F, thicknessBrush));\n  const dstyDiv = cv.matFromArray(dstY.rows, dstY.cols, cv.CV_32F, divideByNumber(dstY.data32F, thicknessBrush));\n  dstX.delete();\n  dstY.delete();\n  return [dstxDiv, dstyDiv];\n  \n  //return [dstX, dstY]\n}\n\nexport function smooth(fieldX: Mat, fieldY: Mat, radius: number, iterations: number = 1) : [Mat, Mat] {\n  const s = 2 * radius + 1;\n  const ksize = new cv.Size(s, s);\n  \n  let dstX = new cv.Mat();\n  let dstY = new cv.Mat();\n  for(let i = 0; i < iterations; ++i) {\n    cv.GaussianBlur(fieldX, dstX, ksize, 0, 0, cv.BORDER_DEFAULT);\n    cv.GaussianBlur(fieldY, dstY, ksize, 0, 0, cv.BORDER_DEFAULT);\n  }\n  return [dstX, dstY];\n}\n\nexport function direction(fieldX: Mat, fieldY: Mat, i: number, j: number) : number {\n  return Math.atan2(fieldY.floatAt(i, j), fieldX.floatAt(i, j));\n}\n\nexport function magnitude(fieldX: Mat, fieldY: Mat, i: number, j: number) : number {\n  return Math.hypot(fieldX.floatAt(i, j), fieldY.floatAt(i, j));\n}\n","import { Mat } from \"opencv-ts\";\nimport { range } from \"lodash\";\n \nimport { colorSelect, rangeOfPixels, generateRandomGrid, computeColorProbabilities } from \"./tools\";\nimport { generateColorPalette, drawPalette, extendPalette, pixel } from \"./palette\";\nimport { toGray, resizeWithRatio } from \"./imageProcessingTool\";\nimport { createGradient, smooth, direction, magnitude } from \"./gradient\";\n\n\nfunction radiansToDegrees(radians: number) : number\n{\n  const pi = Math.PI;\n  return radians * (180/pi);\n}\n\ntype ProcessStateMachine = \"palette\" | \"grey\" |\"gradiants\" |\"gradiantSmooth\" |\"generateGrid\" |\"medianBlur\" | \"done\";\n\n\nexport const MAX_THICKNESS_BRUSH = 15.36;\nexport const CANVAS_IDS = [\n  \"drawPalette\",\n  \"greyOutput\",\n  \"canvasOutputX\",\n  \"canvasOutputY\",\n  \"canvasOutputXSmooth\",\n  \"canvasOutputYSmooth\",\n  \"medianBlur\",\n  \"finalResult\"\n];\n\nexport const ProcessStateMachineArray = [\n\"palette\",\n\"grey\",\n\"gradiants\",\n\"gradiantSmooth\",\n\"medianBlur\",\n\"generateGrid\",\n\"done\"\n];\n\n/////////////////////////////////////////////////////////////////////////////////\n// Delay in each method is here to \"cool down\" each step of pointillism algorithm\n/////////////////////////////////////////////////////////////////////////////////\n\n\nexport async function generatePalette(\n    imgElement: HTMLImageElement,\n    paletteSize: number,\n    hue: number,\n    saturation: number,\n    delay: number = 2000\n  ) : Promise<pixel[]> {\n  return new Promise((resolve) => {\n      let palette = generateColorPalette(imgElement, paletteSize);\n      palette = extendPalette(palette, hue, saturation);\n\n      drawPalette(CANVAS_IDS[0], palette);\n      setTimeout(() => resolve(palette), delay);\n  });\n}\n\nexport async function generateGreyImage(cv: any, src: Mat, delay: number = 2000) : Promise<Mat> {\n  return new Promise((resolve) => {\n    let grey: Mat = toGray(src);\n    cv.imshow(CANVAS_IDS[1], grey);\n    setTimeout(() => resolve(grey), delay);\n  });\n}\n\nexport async function generateGradiant(cv: any, grey: Mat, thicknessBrush: number, delay: number = 2000): Promise<[Mat, Mat]> {\n  return new Promise((resolve) => {\n    const gradiants = createGradient(grey, thicknessBrush);\n    cv.imshow(CANVAS_IDS[2], gradiants[0]);\n    cv.imshow(CANVAS_IDS[3], gradiants[1]);\n\n    setTimeout(() => resolve(gradiants), delay);\n  });\n}\n\nexport async function generateSmoothGradiant(cv: any, rows: number, cols: number, dstx: Mat, dsty: Mat, delay: number = 2000): Promise<[Mat, Mat]> {\n  return new Promise((resolve) => {\n    const gradientSmoothingRadius = Math.round(Math.max(rows, cols) / 50);\n    const gradientSmooths = smooth(dstx, dsty, gradientSmoothingRadius);\n    cv.imshow(CANVAS_IDS[4], gradientSmooths[0]);\n    cv.imshow(CANVAS_IDS[5], gradientSmooths[1]);\n\n    setTimeout(() => resolve(gradientSmooths), delay);\n  });\n}\n\nexport async function generateBlurMedian(cv: any, src: Mat, delay: number = 2000) : Promise<Mat> {\n  return new Promise((resolve) => {\n    let medianBlur = cv.Mat.zeros(src.cols, src.rows, cv.CV_32F);\n    cv.medianBlur(src, medianBlur, 11);\n    cv.imshow(CANVAS_IDS[6], medianBlur);\n\n    setTimeout(() => resolve(medianBlur), delay);\n  });\n}\n\nexport async function drawPointillism(\n  cv: any,\n  src: Mat,\n  medianBlur: Mat,\n  dstxSmooth: Mat,\n  dstySmooth: Mat,\n  grid: Array<any>,\n  palette: pixel[],\n  delay: number = 2000\n  ) : Promise<unknown> {\n  \n    const batchSize = 1000;\n    // magic number to apply properly the algorithm on both small and large images\n    const maxSize = Math.max(src.rows, src.cols);\n    const strokeScaleDivider = maxSize * 1000 /1900;\n    const strokeScale = Math.floor(maxSize / strokeScaleDivider);\n    return new Promise((resolve) => {\n      range(0, grid.length, batchSize).forEach(progressIndex => {\n        const pixels = rangeOfPixels(src, grid, progressIndex, progressIndex + batchSize);\n        const colorProbabilities = computeColorProbabilities(pixels, palette);\n        grid.slice(progressIndex, Math.min((progressIndex + batchSize), grid.length)).forEach(([y, x], index) => {\n          const color = colorSelect(colorProbabilities[index], palette);\n          const angle = radiansToDegrees(direction(dstxSmooth, dstySmooth, y, x)) + 90;\n          const length = Math.round(strokeScale + strokeScale * Math.sqrt(magnitude(dstxSmooth, dstySmooth, y, x)));\n          const scalar = new cv.Scalar(color[0], color[1], color[2], 255);\n          cv.ellipse(medianBlur, new cv.Point(x, y), new cv.Size(length, strokeScale), angle, 0, 360, scalar, -1, cv.LINE_AA);\n        });\n      });\n\n      cv.imshow(CANVAS_IDS[7],medianBlur);\n      setTimeout(() => resolve(\"ok\"), delay);\n    });\n}\n\n\nexport async function computePointillism(\n    cv: any,\n    imgElement: HTMLImageElement,\n    thicknessBrush: number,\n    paletteSize: number,\n    hue: number,\n    saturation: number,\n    autoResize: boolean,\n    progressCallback: (progress: ProcessStateMachine) => void, delay: number = 2000\n  ) {\n  const palette = await generatePalette(imgElement, paletteSize, hue, saturation);\n  progressCallback(\"palette\");\n\n  let src = await cv.imread(imgElement);\n\n  const grey = await generateGreyImage(cv, src, delay);\n  progressCallback(\"grey\");\n  \n  const [dstX, dstY] = await generateGradiant(cv, grey, thicknessBrush, delay);\n  progressCallback(\"gradiants\")\n\n  const [dstxSmooth, dstySmooth] = await generateSmoothGradiant(cv, src.rows, src.cols, dstX, dstY, delay);\n  progressCallback(\"gradiantSmooth\")\n  \n  grey.delete();\n  dstX.delete();\n  dstY.delete();\n\n  if(autoResize) {\n    src = resizeWithRatio(src, 1280, 780);\n  }\n\n  let medianBlur = await generateBlurMedian(cv, src, delay);\n  progressCallback(\"medianBlur\")\n\n  const grid = generateRandomGrid(src.cols, src.rows);\n  setTimeout(() =>  progressCallback(\"generateGrid\"), delay);\n\n\n  await drawPointillism(cv, src, medianBlur, dstxSmooth, dstySmooth, grid, palette ,delay);\n  progressCallback(\"done\")\n\n  src.delete();\n  medianBlur.delete();\n  dstxSmooth.delete();\n  dstySmooth.delete();\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport Stepper from \"./Components/Stepper\";\nimport UploadButton from \"./Components/UploadButton\";\nimport Loader from \"./Components/Loader\";\nimport ThicknessSlider from \"./Components/ThicknessSlider\";\nimport PaletteSizeSlider from \"./Components/PaletteSizeSlider\";\nimport Footer from \"./Components/Footer\";\nimport NavBar from \"./Components/NavBar\";\nimport CanvasCard from \"./Components/CanvasCard\";\nimport ColorComponent from \"./Components/ColorComponent\";\n\nimport UseOpenCV from \"./Hooks/UseOpenCV\";\nimport { computePointillism, MAX_THICKNESS_BRUSH, CANVAS_IDS, ProcessStateMachineArray } from \"./Pointillism/pointillism\";\n\nexport const TITLE_FROM_CANVAS_IDS = [\n  \"Generate Palette\",\n  \"Grey Scale Image\",\n  \"Gradient on X axis\",\n  \"Gradient on Y axis\",\n  \"Gradient on X axis Smooth\",\n  \"Gradient on Y axis Smooth\",\n  \"Generate Median Blur Image\",\n  \"Final Result\"\n];\n\nconst initialCanvasCollapse = [false, false, false, false, false, false, false, false];\n\nfunction App() {\n  const { cv, openCVLoaded } = UseOpenCV();\n\n  const ref = useRef<HTMLImageElement>(null);\n  const refFinalResult = useRef<HTMLDivElement>(null);\n\n  const [progress, setProgress] = useState<string>(\"\");\n  const [validForm, setValidForm] = useState<boolean>(false);\n  const [autoresize, setAutoresize] = useState<boolean>(false);\n  const [runAlgo, setRunAlgo] = useState<boolean>(false);\n  const [thicknessBrush, setThicknessBrush] = useState<number>(100);\n  const [paletteSize, setPaletteSize] = useState<number>(20);\n  const [hue, setHue] = useState<number>(20);\n  const [saturation, setSaturation] = useState<number>(20);\n  const [visibilityCanvas, setVisibilityCanvas] = useState<boolean[]>(initialCanvasCollapse);\n  \n  useEffect(() => {\n    if(runAlgo && ref.current) {\n      computePointillism(cv, ref.current, thicknessBrush/100, paletteSize, hue, saturation, autoresize, progressCallback).then(() => {\n        setRunAlgo(false);\n        // show last canvas with the pointillism result\n        if(visibilityCanvas[visibilityCanvas.length - 1] === false) {\n          toggleCanvas(visibilityCanvas.length - 1);\n        }\n\n        if(refFinalResult.current) {\n          refFinalResult.current.scrollIntoView({behavior: \"smooth\"});\n        }\n      })\n    }\n  }, [cv, runAlgo])\n\n\n  function loadImage(event: React.ChangeEvent<HTMLInputElement>) {\n    if(event && event.target && event.target.files && ref.current) {\n      ref.current.src = URL.createObjectURL(event.target.files[0]);\n    }\n  }\n\n  function progressCallback(progress: string) {\n    setProgress(progress);\n  }\n\n\n  function submit() {\n    setProgress(\"\");\n    setVisibilityCanvas(initialCanvasCollapse);\n    setRunAlgo(true);\n  }\n\n  function toggleCanvas(index: number) {\n    const newVisibiltyCanvas = visibilityCanvas.map((value, i) => {\n      if(index === i) {\n        return !value;\n      }\n      return value;\n    });\n    setVisibilityCanvas(newVisibiltyCanvas);\n  }\n\n  function renderAllCanvas() {\n    return CANVAS_IDS.map((id, index) => {\n        if(id === \"finalResult\") {\n          return (\n            <div className=\"w-full\" key={id} ref={refFinalResult}>\n              <CanvasCard\n                toggleCanvas={() => toggleCanvas(index)}\n                title={TITLE_FROM_CANVAS_IDS[index]}\n                canvasId={id}\n                collapsible={validForm}\n                collapse={visibilityCanvas[index]}\n              />\n            </div>\n          );\n        } else {\n          return (\n            <CanvasCard\n              key={id}\n              toggleCanvas={() => toggleCanvas(index)}\n              title={TITLE_FROM_CANVAS_IDS[index]}\n              canvasId={id}\n              collapsible={validForm}\n              collapse={visibilityCanvas[index]}\n            />\n          );\n        }\n      });\n  }\n\n  function renderForm() {\n    const content = runAlgo ?\n      <div className=\"flex justify-center\">\n        <Loader width=\"w-80\"/>\n      </div>\n    :\n    (\n      <div className=\"flex flex-col items-center gap-5 w-full p-4\">\n        <h2 className=\"flex self-start text-xl font-bold\">Settings</h2>\n        <UploadButton onChange={loadImage} />\n        <ThicknessSlider value={thicknessBrush} min={1 * 100} max={MAX_THICKNESS_BRUSH * 100} onChange={(value) => setThicknessBrush(parseInt(value, 10))} />\n        <PaletteSizeSlider value={paletteSize} onChange={(value) => setPaletteSize(parseInt(value, 10))}/>\n        <div className=\"self-start\">\n          <div className=\"form-control\">\n            <label className=\"cursor-pointer flex gap-2\">\n              <span className=\"label-text text-neutral-content\">Resize Image </span> \n              <input type=\"checkbox\" checked={autoresize} onChange={() => setAutoresize((old) => !old)} className=\"checkbox checkbox-primary checkbox-md\" />\n            </label>\n          </div>\n          <span className=\"text-sm\">Recommanded for heavy images on low configuration</span>\n        </div>\n        <ColorComponent hue={hue} saturation={saturation} onChangeHue={setHue} onChangeSaturation={setSaturation} />\n        <div>\n          \n        </div>\n        <div className=\"flex self-end\">\n          <button className=\"btn btn-primary\" disabled={!validForm} onClick={submit}>Generate</button>\n        </div>\n      </div>\n   );\n\n    return (\n      <div className=\"card glass text-neutral-content\">\n        {content}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-img\">\n      <div className=\"container mx-auto flex flex-col gap-10 bg-neutral\">\n        <NavBar/>\n        <div className=\"flex flex-col px-4 flex flex-col gap-5\" >\n          <div className=\"alert alert-warning\">\n            <div className=\"flex-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\"> \n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n              </svg> \n              <label>The algorithm is resource intensive. So it may not finish on mobile phone or low configuration. Please consider resize option</label>\n            </div>\n          </div>\n            {\n              !openCVLoaded ?\n              (<div className=\"flex flex-col items-center text-neutral-content\">\n                <Loader/>\n                Loading OpenCV library\n              </div>)\n              :\n              renderForm()\n            }\n            <img className=\"hidden\" id=\"imageSrc\" alt=\"No Image\" ref={ref} onLoad={() => setValidForm(true)}/>\n            <div className=\"w-full flex flex-col items-center gap-3 p-5 card glass text-neutral-content rounded-box\">\n              <h2 className=\"text-xl font-bold text-neutral-content\">Results</h2>\n              <Stepper steps={ProcessStateMachineArray} currentStep={progress} />\n              {renderAllCanvas()}\n            </div>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}