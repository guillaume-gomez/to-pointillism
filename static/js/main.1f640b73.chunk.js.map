{"version":3,"sources":["Components/Stepper.tsx","Components/UploadButton.tsx","Components/Loader.tsx","Components/Slider.tsx","Components/SliderWithLabel.tsx","Components/ThicknessSlider.tsx","Components/SmoothnessSlider.tsx","Components/PaletteSizeSlider.tsx","Components/Footer.tsx","monaLisa.jpeg","Components/NavBar.tsx","Components/CanvasCard.tsx","Components/ColorComponent.tsx","Hooks/UseOpenCV.tsx","Pointillism/tools.ts","Pointillism/colorTools.ts","Pointillism/palette.ts","Pointillism/imageProcessingTool.ts","Pointillism/gradient.ts","Pointillism/pointillism.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Stepper","steps","currentStep","useState","stepIndex","setStepIndex","useEffect","stpIndex","findIndex","step","className","map","index","UploadButton","onChange","fill","xmlns","viewBox","d","type","accept","Loader","width","height","version","id","x","y","enableBackground","attributeName","attributeType","dur","from","to","repeatCount","Slider","value","min","max","event","target","SliderWithLabel","label","ThicknessSlider","SmoothnessSlider","PaletteSizeSlider","Footer","href","aria-label","rel","NavBar","src","Logo","CanvasCard","toggleCanvas","title","canvasId","collapsible","collapse","format","refCanvas","useRef","refA","checked","ref","onClick","current","dataURL","toDataURL","download","replace","window","open","ColorComponent","hue","saturation","onChangeHue","onChangeSaturation","parseInt","UseOpenCV","openCVLoaded","setOpenCVLoaded","cv","onRuntimeInitialized","getRandomIntInclusive","Math","ceil","floor","random","mod","n","m","generateRandomGrid","scale","ratio","grid","i","j","push","shuffle","rangeOfPixels","image","slice","col","row","ucharPtr","colorSelect","probabilities","palette","r","bisect_left","length","computeColorProbabilities","pixels","k","distances","arrayDistGpu","maxima","arrayMax","subArrayMut","summ","sum","divideArrayMut","expArrayMut","cumulativeSum","GPU","createKernel","a","b","sqrt","this","thread","setOutput","array","results","Array","exp","cumulativeSumOP","saturate","lightness","rotateHue","rotation","generateColorPalette","paletteSize","colorThief","ColorThief","getPalette","extendPalette","saturationLevel","hueLevel","moreSaturatedPalette","red","green","blue","convert","rgb","hsl","moreSaturated","moreHuePaletteGenerator","newHue","drawPalette","canvas","document","getElementById","getContext","Error","context","nbBaseColor","widthColor","heightColor","yMax","fillStyle","fillRect","resizeWithRatio","maxWidth","maxHeight","cols","rows","size","Size","dst","Mat","resize","INTER_AREA","toGray","imageSource","grey","CV_8UC4","cvtColor","COLOR_RGB2GRAY","createGradient","thicknessBrush","divideByNumber","data","dstX","dstY","Scharr","CV_32F","BORDER_DEFAULT","dstxDiv","matFromArray","data32F","dstyDiv","delete","smooth","fieldX","fieldY","radius","iterations","s","ksize","GaussianBlur","direction","atan2","floatAt","magnitude","hypot","radiansToDegrees","radians","PI","CANVAS_IDS","ProcessStateMachineArray","generatePalette","imgElement","delay","Promise","resolve","setTimeout","generateGreyImage","imshow","generateGradiant","smoothnessGradiant","gradiants","generateSmoothGradiant","dstx","dsty","gradientSmoothingRadius","round","gradientSmooths","generateBlurMedian","medianBlur","zeros","drawPointillism","dstxSmooth","dstySmooth","batchSize","range","forEach","progressIndex","maxSize","colorProbabilities","color","angle","scalar","Scalar","ellipse","Point","LINE_AA","autoResize","progressCallback","imread","startTime","performance","now","endTime","console","log","TITLE_FROM_CANVAS_IDS","initialCanvasCollapse","App","refFinalResult","progress","setProgress","validForm","setValidForm","autoresize","setAutoresize","runAlgo","setRunAlgo","MAX_GRADIANT_SMOOTH_RATIO","setSmoothnessGradiant","thickness","setThickness","setPaletteSize","setHue","setFormat","setSaturation","visibilityCanvas","setVisibilityCanvas","loadImage","files","URL","createObjectURL","onload","empiricalRatio","computeThicknessBrush","submit","newVisibiltyCanvas","computePointillism","then","scrollIntoView","behavior","strokeLinecap","strokeLinejoin","strokeWidth","content","old","e","disabled","renderForm","alt","onLoad","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f640b73.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { findIndex } from \"lodash\";\n\ninterface StepperInterface {\n  steps: string[];\n  currentStep: string;\n}\n\nfunction Stepper({ steps, currentStep }: StepperInterface): React.ReactElement {\n  const [stepIndex, setStepIndex] = useState<number>(0);\n  \n  useEffect(()=> {\n    const stpIndex = findIndex(steps, (step) => step === currentStep);\n    if(stpIndex === -1) {\n      setStepIndex(0);\n    } else {\n      setStepIndex(stpIndex);\n    }\n  }, [currentStep]);\n\n  return (\n    <ul className=\"steps w-full overflow-auto\">\n      {\n        steps.map((step, index) => {\n          if(index <= stepIndex) {\n            return (\n              <li key={step} className=\"step step-primary text-neutral-content\">\n                <span className=\"hidden lg:block xl:block 2xl:block\">{step}</span>\n              </li>\n            );\n          }\n          return (\n            <li key={step} className=\"step text-neutral-content\">\n              <span className=\"hidden lg:block xl:block 2xl:block\">{step}</span>\n            </li>\n            );\n        })\n      }\n    </ul>\n  );\n}\n\nexport default Stepper;\n\n\n","import React from 'react';\n\ninterface UploadButtonInterface {\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nfunction UploadButton({ onChange } : UploadButtonInterface): React.ReactElement {\n  return (\n      <label className=\"w-full flex flex-col items-center px-4 py-6 bg-white text-primary rounded-lg shadow-lg tracking-wide uppercase border-2 border-primary transition duration-300 ease-in-out bg-opacity-50 cursor-pointer hover:bg-primary hover:text-white\">\n        <svg className=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n          <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n        </svg>\n        <span className=\"mt-2 leading-normal\">Select a picture</span>\n        <input type='file' accept=\"image/*\" className=\"hidden\" onChange={onChange} />\n      </label>\n    \n  );\n}\n\nexport default UploadButton;\n\n\n","import React from 'react';\n\ninterface LoaderInterface {\n  width?: string;\n  height?: string;\n}\n\nfunction Loader({ width = \"w-28\", height = \"w-28\"} : LoaderInterface): React.ReactElement {\n  return (\n    <svg className={`${width} ${height}`} version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" >\n      <path fill=\"white\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n        <animateTransform \n           attributeName=\"transform\" \n           attributeType=\"XML\" \n           type=\"rotate\"\n           dur=\"1s\" \n           from=\"0 50 50\"\n           to=\"360 50 50\" \n           repeatCount=\"indefinite\" />\n    </path>\n  </svg>\n  );\n}\n\nexport default Loader;\n\n\n","import React from 'react';\n\ninterface SliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n  step?: number\n}\n\nfunction Slider({ value, onChange, min = 1, max = 100, step = 1 } : SliderInterface): React.ReactElement {\n  return (\n   <input type=\"range\" onChange={(event) => onChange(event.target.value)} min={min} max={max} value={value} step={step} className=\"range range-primary\"></input> \n  );\n}\n\nexport default Slider;\n","import React from 'react';\nimport Slider from \"./Slider\";\n\ninterface SliderWithLabelInterface {\n  value: number;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n  label: string;\n}\n\nfunction SliderWithLabel({ value, onChange, min = 1, max = 100, step = 1, label } : SliderWithLabelInterface): React.ReactElement {\n  return (\n   <>\n     <div className=\"flex justify-between\">\n       <label className=\"text-base font-semibold\">{label}</label>\n       <p className=\"badge badge-lg\">{value}</p>\n     </div>\n     <Slider value={value} onChange={onChange} min={min} max={max} />\n    </>\n  );\n}\n\nexport default SliderWithLabel;\n","import React from 'react';\nimport SliderWithLabel from \"./SliderWithLabel\";\n\ninterface ThicknessSliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n}\n\nfunction ThicknessSlider({ value, onChange, min = 1, max = 100 } : ThicknessSliderInterface): React.ReactElement {\n  return (\n    <div className=\"w-full\">\n      <SliderWithLabel label=\"Thickness \"value={value} onChange={onChange} min={min} max={max} step={1}/>\n      <span className=\"text-xs\">The thickness of the brush. You can let the algorithm choose for you.</span>\n   </div>\n  );\n}\n\nexport default ThicknessSlider;\n","import React from 'react';\nimport Slider from \"./Slider\";\n\ninterface SmoothnessSliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n}\n\nfunction SmoothnessSlider({ value, onChange, min = 1, max = 100 } : SmoothnessSliderInterface): React.ReactElement {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between text-base font-semibold\">\n        <label>More Artistic</label>\n        <label>More Realistic</label>\n      </div>\n      <Slider value={value} onChange={onChange} min={min} max={max} step={1}/>\n      <div className=\"flex justify-between\">\n        <span className=\"text-xs\">The more the algorithm is artistic, the more it will apply distortion on base image.</span>\n        <span className=\"badge badge-lg\">{value}</span>\n      </div>\n   </div>\n  );\n}\n\nexport default SmoothnessSlider;\n","import React from 'react';\nimport SliderWithLabel from \"./SliderWithLabel\";\n\ninterface PaletteSizeSliderInterface {\n  value: number;\n  onChange: (value: string) => void;\n}\n\nfunction PaletteSizeSlider({ value, onChange } : PaletteSizeSliderInterface): React.ReactElement {\n  return (\n    <div className=\"w-full\">\n      <SliderWithLabel label=\"Palette Size\" value={value} onChange={onChange} min={5} max={20} step={1}/>\n   </div>\n  );\n}\n\nexport default PaletteSizeSlider;\n","import React from 'react';\n\nfunction Footer(): React.ReactElement {\n  return (\n    <footer className=\"p-4 footer bg-base-300 text-base-content footer-center p-6\">\n      <div>\n        <p> 2021 - Made By Guillaume Gomez</p>\n        <a href=\"https://github.com/guillaume-gomez/to-pointillism\" className=\"text-xs\">Did you enjoyed ? 😊 Star the project </a>\n        <a aria-label=\"Github\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/guillaume-gomez/to-pointillism\" className=\"btn btn-square\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"inline-block w-6 h-6 fill-current\"><path d=\"M256,32C132.3,32,32,134.9,32,261.7c0,101.5,64.2,187.5,153.2,217.9a17.56,17.56,0,0,0,3.8.4c8.3,0,11.5-6.1,11.5-11.4,0-5.5-.2-19.9-.3-39.1a102.4,102.4,0,0,1-22.6,2.7c-43.1,0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1,1.4-14.1h.1c22.5,2,34.3,23.8,34.3,23.8,11.2,19.6,26.2,25.1,39.6,25.1a63,63,0,0,0,25.6-6c2-14.8,7.8-24.9,14.2-30.7-49.7-5.8-102-25.5-102-113.5,0-25.1,8.7-45.6,23-61.6-2.3-5.8-10-29.2,2.2-60.8a18.64,18.64,0,0,1,5-.5c8.1,0,26.4,3.1,56.6,24.1a208.21,208.21,0,0,1,112.2,0c30.2-21,48.5-24.1,56.6-24.1a18.64,18.64,0,0,1,5,.5c12.2,31.6,4.5,55,2.2,60.8,14.3,16.1,23,36.6,23,61.6,0,88.2-52.4,107.6-102.3,113.3,8,7.1,15.2,21.1,15.2,42.5,0,30.7-.3,55.5-.3,63,0,5.4,3.1,11.5,11.4,11.5a19.35,19.35,0,0,0,4-.4C415.9,449.2,480,363.1,480,261.7,480,134.9,379.7,32,256,32Z\"></path></svg>\n        </a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/monaLisa.c9f2cafc.jpeg\";","import React from 'react';\nimport Logo from \"../monaLisa.jpeg\";\n\nfunction NavBar(): React.ReactElement {\n  return (\n     <div className=\"navbar mb-2 bg-neutral-focus text-neutral-content p-6\">\n     <img className=\"rounded-lg\" src={Logo} width=\"64px\" />\n      <div className=\"px-2 mx-2 navbar-start flex flex-col gap-1 items-start\">\n        <span className=\"text-2xl font-bold\">\n          Pointillism\n        </span>\n        <span className=\"text-xs\">\n          Convert your pictures into art pieces in one click\n        </span>\n      </div>\n      <div className=\"navbar-end flex gap-2\">\n        <a aria-label=\"Github\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/guillaume-gomez/to-pointillism\" className=\"btn btn-primary btn-square\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"inline-block w-6 h-6 fill-current\"><path d=\"M256,32C132.3,32,32,134.9,32,261.7c0,101.5,64.2,187.5,153.2,217.9a17.56,17.56,0,0,0,3.8.4c8.3,0,11.5-6.1,11.5-11.4,0-5.5-.2-19.9-.3-39.1a102.4,102.4,0,0,1-22.6,2.7c-43.1,0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1,1.4-14.1h.1c22.5,2,34.3,23.8,34.3,23.8,11.2,19.6,26.2,25.1,39.6,25.1a63,63,0,0,0,25.6-6c2-14.8,7.8-24.9,14.2-30.7-49.7-5.8-102-25.5-102-113.5,0-25.1,8.7-45.6,23-61.6-2.3-5.8-10-29.2,2.2-60.8a18.64,18.64,0,0,1,5-.5c8.1,0,26.4,3.1,56.6,24.1a208.21,208.21,0,0,1,112.2,0c30.2-21,48.5-24.1,56.6-24.1a18.64,18.64,0,0,1,5,.5c12.2,31.6,4.5,55,2.2,60.8,14.3,16.1,23,36.6,23,61.6,0,88.2-52.4,107.6-102.3,113.3,8,7.1,15.2,21.1,15.2,42.5,0,30.7-.3,55.5-.3,63,0,5.4,3.1,11.5,11.4,11.5a19.35,19.35,0,0,0,4-.4C415.9,449.2,480,363.1,480,261.7,480,134.9,379.7,32,256,32Z\"></path></svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useRef } from 'react';\n\ninterface CanvasCardInterface {\n  toggleCanvas: () => void;\n  title: string;\n  canvasId: string;\n  collapsible: boolean;\n  collapse: boolean;\n  format: string;\n}\n\nfunction CanvasCard({ toggleCanvas, title, canvasId, collapsible, collapse, format }: CanvasCardInterface): React.ReactElement {\n  const refCanvas = useRef<HTMLCanvasElement>(null);\n  const refA = useRef<HTMLAnchorElement>(null);\n\n  function saveImage() {\n    if(refCanvas.current && refA.current) {\n      const dataURL = refCanvas.current.toDataURL(`image/${format}`);\n      (refA.current as any).download = `image.${format}`;\n      refA.current.href = dataURL.replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n      window.open('about:blank','image from canvas');\n    }\n  }\n\n  return (\n    <div className={`bg-neutral text-neutral-content collapse w-full border rounded-box border-base-300 collapse-arrow ${collapsible ? \"\" : \"collapse-close\"}`}>\n      <input type=\"checkbox\" checked={collapse} onChange={() => toggleCanvas()}/>\n      <div className=\"collapse-title text-lg font-medium\">\n        {title}\n      </div>\n      <div className=\"collapse-content flex flex-col justify-center gap-3\"> \n        <canvas ref={refCanvas} className={`max-w-full rounded-lg`} id={canvasId}/>\n        <div>\n          <div className=\"flex flex-row-reverse\">\n            <a ref={refA} className=\"btn btn-primary\" onClick={saveImage}>Save</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CanvasCard;\n\n\n","import React from 'react';\nimport SliderWithLabel from \"./SliderWithLabel\";\n\ninterface ColorComponentInterface {\n  hue: number;\n  saturation: number;\n  onChangeHue: (value: number) => void;\n  onChangeSaturation: (value: number) => void;\n}\n\nfunction ColorComponent({hue, saturation, onChangeHue, onChangeSaturation } : ColorComponentInterface): React.ReactElement {\n  return (\n    <div>\n      <label className=\"text-lg\">Advanced palette settings</label>\n      <div className=\"flex flex-row justify-between gap-5 pt-2\">\n        <div className=\"w-2/4\">\n          <SliderWithLabel label=\"Hue Level\" value={hue} onChange={(value) => onChangeHue(parseInt(value, 10))} min={0} max={360} />\n          <span className=\"text-xs\">Hue level will change the second row in the palette</span>\n        </div>\n        <div className=\"divider divider-vertical\"></div>\n        <div className=\"w-2/4\">\n          <SliderWithLabel label=\"Saturation Level\" value={saturation} onChange={(value) => onChangeSaturation(parseInt(value, 10))} min={0} max={100} />\n          <span className=\"text-xs\">Saturation level will change the third and the fourth rows in the palette </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ColorComponent;\n","import cv from \"opencv-ts\";\nimport { useEffect, useState } from 'react';\n\ninterface UseOpenCVInterface {\n  openCVLoaded : boolean;\n  cv: any;\n}\n\nfunction UseOpenCV(): UseOpenCVInterface {\n  const [openCVLoaded, setOpenCVLoaded] = useState<boolean>(false);\n  \n  useEffect(() => {\n    cv.onRuntimeInitialized = () => setOpenCVLoaded(true)\n  }, [setOpenCVLoaded]);\n\n  return { openCVLoaded, cv };\n}\n\nexport default UseOpenCV;\n","import { Mat } from \"opencv-ts\";\nimport { shuffle, max, sum } from \"lodash\";\nimport { bisect_left } from \"aureooms-js-bisect\";\nimport { GPU } from \"gpu.js\";\n\nconst gpu = new GPU();\n\ntype pixel = [number, number, number];\n\nfunction getRandomIntInclusive(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\n// https://web.archive.org/web/20090717035140if_/javascript.about.com/od/problemsolving/a/modulobug.htm\nfunction mod(n : number, m: number) : number {\n  return ((n % m) + m) % m;\n}\n\nexport function generateRandomGrid(width: number, height: number, scale: number = 3) {\n  const ratio = (scale / 2) >> 0;\n  let grid : Array<any> = [];\n\n  for(let i = 0; i < height; i = i + scale) {\n    for(let j = 0; j < width; j = j + scale) {\n      const y = getRandomIntInclusive(-ratio, ratio) + i;\n      const x = getRandomIntInclusive(-ratio, ratio) + j;\n\n      grid.push([mod(y, height), mod(x, width)])\n    }\n  }\n  return shuffle(grid);\n}\n\nexport function rangeOfPixels(image: Mat, grid: Array<[number, number]>, min: number, max: number ) : pixel[] {\n  return grid.slice(min, max).map(([col, row]) => image.ucharPtr(col, row) as pixel)\n}\n\n\nexport function colorSelect(probabilities : number[], palette : pixel[]): pixel {\n  const r = Math.random();\n  const index : number = bisect_left(probabilities, r);\n\n  if(index < palette.length) {\n    return palette[index];\n  } else {\n    return palette[palette.length - 1];\n  }\n}\n\nexport function computeColorProbabilities(pixels: pixel[], palette: pixel[], k=9) : number[][] {\n  let distances = arrayDistGpu(pixels, palette) as number[][];\n  //let distances = arrayDist(pixels, palette);\n  const maxima = arrayMax(distances);\n\n  subArrayMut(distances, maxima);\n  let summ = distances.map(row => sum(row));\n  divideArrayMut(distances, summ);\n\n  expArrayMut( distances, k * palette.length);\n  summ = distances.map(row => sum(row));\n  divideArrayMut(distances, summ);\n\n  return cumulativeSum(distances);\n}\n\nfunction distance([x1, y1, z1]: pixel, [x2, y2, z2]: pixel): number {\n  return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2 + (z1 - z2) ** 2);\n}\n\nfunction arrayDist(array1: pixel[], array2: pixel[]) : number[][] {\n  let results = new Array(array1.length);\n  for(let i = 0; i < array1.length; i++) {\n    results[i] = new Array(array2.length);\n    for(let j = 0; j < array2.length; j++) {\n      results[i][j] = distance(array1[i], array2[j]);\n    }\n  }\n  return results;\n}\n\n// loop are made by gpu lib. Only Distance is rewritten\nconst arrayDistGpu = gpu.createKernel(function(a: pixel[], b: pixel[]) {\n  // eslint-disable-next-line\n  return Math.sqrt((a[this.thread.y][0] - b[this.thread.x][0]) ** 2 + (a[this.thread.y][1] - b[this.thread.x][1]) ** 2 + (a[this.thread.y][2] - b[this.thread.x][2]) ** 2)  //distance(a[this.thread.x], b[this.thread.x]);\n})\n.setOutput([80, 1000]);\n//Palette Size max, BatchSize\n\n\nfunction arrayMax(array: number[][]) : number[] {\n  let results = new Array(array.length);\n  for(let i = 0; i < array.length; ++i) {\n    results[i] = max(array[i]) as number\n  }\n  return results;\n}\n\nfunction subArray(a: number[], b: number[][]) : number[][] {\n  return b.map((arrayVal, index) => \n    arrayVal.map(val =>\n      (a[index] - val)\n    )\n  );\n}\n\nfunction subArrayMut(a: number[][], b: number[]) : void {\n  for(let i = 0; i < a.length; ++i) {\n    for(let j = 0; j < a[i].length; ++j) {\n      a[i][j] = b[i] - a[i][j];\n    }\n  }\n}\n\nfunction divideArray(a: number[], b: number[][]) : number[][] {\n  return b.map((arrayVal, index) => \n    arrayVal.map(val =>\n      ( val / a[index])\n    )\n  );\n}\n\nfunction divideArrayMut(a: number[][], b: number[]) : void {\n  for(let i = 0; i < a.length; ++i) {\n    for(let j = 0; j < a[i].length; j++) {\n      a[i][j] = a[i][j] / b[i];\n    }\n  }\n}\n\nfunction expArray(a: number, b: number[][]) : number[][] {\n  return b.map((arrayVal) => \n    arrayVal.map(val =>\n       Math.exp(val * a)\n    )\n  );\n}\n\nfunction expArrayMut(a: number[][], b: number) {\n  for(let i = 0; i < a.length; ++i) {\n    for(let j = 0; j < a[i].length; j++) {\n      a[i][j] = Math.exp(a[i][j] * b);\n    }\n  }\n}\n\nfunction cumulativeSum(array: number[][]) : number[][] {\n  const cumulativeSumOP = ((sum: number) => (value:number) => sum += value);\n\n  let results = new Array(array.length);\n  for(let i = 0; i < results.length; i++) {\n    results[i] = array[i].map(cumulativeSumOP(0))\n  }\n  return results;\n}\n","type colorType = [number, number, number];\n\n\nexport function saturate([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, Math.min(100, saturation + x), lightness];\n}\n\n\nexport function desaturate([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, Math.max(0, saturation - x), lightness];\n}\n\n\nexport function lighten([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, saturation, Math.min(100, lightness + x)];\n}\n\n\nexport function darken([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, saturation, Math.max(0, lightness - x)];\n}\n\nexport function rotateHue([hue, saturation, lightness]: colorType, rotation: number) : colorType {\n  const modulo = (x: number, n: number) : number => (x % n + n) % n;\n  const newHue = modulo(hue + rotation, 360);\n  return [newHue, saturation, lightness];\n}","import ColorThief from 'colorthief';\nimport convert from \"color-convert\";\nimport { saturate, rotateHue } from \"./colorTools\";\n\nconst PALETTE_BASE_COLOR = 20;\nexport type pixel = [number, number, number];\n\nexport function generateColorPalette(image: HTMLImageElement, paletteSize: number  = PALETTE_BASE_COLOR) : pixel[] {\n  let colorThief = new ColorThief();\n  return colorThief.getPalette(image, paletteSize);\n}\n\nexport function extendPalette(palette: pixel[], saturationLevel: number = 20, hueLevel: number = 20 ) : pixel[] {\n  const moreSaturatedPalette = palette.map(([red, green, blue]) => {\n    const [hue, saturation, lightness] = convert.rgb.hsl(red, green, blue);\n    const [_, moreSaturated, __] = saturate([hue, saturation, lightness], saturationLevel);\n    return convert.hsl.rgb([hue, moreSaturated, lightness]);\n  });\n\n  function moreHuePaletteGenerator() {\n    return palette.map(([red, green, blue]) => {\n      const random = Math.random() * (hueLevel - -hueLevel) + -hueLevel;\n      \n      const [hue, saturation, lightness] = convert.rgb.hsl(red, green, blue);\n      const [newHue, _, __] = rotateHue([hue, saturation, lightness], random);\n      return convert.hsl.rgb([newHue, saturation, lightness]);\n    });\n  }\n  return [...palette.slice(0), ...moreSaturatedPalette, ...moreHuePaletteGenerator(), ...moreHuePaletteGenerator()];\n}\n\nexport function drawPalette(canvasId: string, palette: pixel[]) : void {\n  let canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n  if (!canvas.getContext) {\n    throw new Error(\"cannot find canvas to draw palette\");\n  }\n  let context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n  const nbBaseColor = palette.length / 4; // original palette + 3 more palettes\n  \n  const widthColor = canvas.width / nbBaseColor;\n  const heightColor = widthColor;\n\n  const yMax = palette.length / nbBaseColor;\n\n  for(let y = 0; y < yMax; ++y) {\n    for(let x = 0; x < nbBaseColor; ++x) {\n      const [red, green, blue] = palette[x + y * nbBaseColor];\n      context.fillStyle = `rgb(${red}, ${green}, ${blue})`;\n      context.fillRect(widthColor * x, heightColor * y, widthColor, heightColor);\n    }\n  }\n}","import cv, { Mat, Size } from \"opencv-ts\";\n\nexport function resize(image: Mat, width: number, height: number) : Mat {\n  const newImage: Mat = new cv.Mat(image.cols, image.rows, cv.CV_8UC4);\n  cv.resize(image, newImage, new cv.Size(width, height), 0, 0, cv.INTER_AREA);\n  return newImage;\n}\n\nexport function resizeWithRatio(image: Mat, maxWidth: number, maxHeight: number) : Mat {\n  if (maxWidth === 0) {\n    throw new Error(\"resize : maxWidth is equal to zero. Please fill a value > 0\");\n  }\n\n  if (maxHeight === 0) {\n    throw new Error(\"resize : maxHeight is equal to zero. Please fill a value > 0\");\n  }\n\n  const ratio = Math.min(1.0, maxWidth / image.cols, maxHeight / image.rows);\n\n  if(ratio !== 1.0) {\n    const size : Size = new cv.Size(image.cols * ratio, image.rows * ratio);\n    let dst = new cv.Mat();\n    cv.resize(image, dst, size, 0, 0, cv.INTER_AREA);\n    return dst;\n  }\n\n  return image\n}\n\nexport function toGray(imageSource: Mat) : Mat {\n  let grey: Mat = new cv.Mat(imageSource.cols, imageSource.rows, cv.CV_8UC4);\n  cv.cvtColor(imageSource, grey, cv.COLOR_RGB2GRAY)\n  return grey;\n}\n\n","import cv, { Mat } from \"opencv-ts\";\n\n// thickness brush has a value from 1 to 15.36\nexport function createGradient(grey: Mat, thicknessBrush: number) : [Mat, Mat] {\n  function divideByNumber(data: number[], x: number) : number[] {\n    return data.map(d => d/x);\n  }\n\n  let dstX = new cv.Mat();\n  let dstY = new cv.Mat();\n  cv.Scharr(grey, dstX, cv.CV_32F, 1, 0, 1, 0, cv.BORDER_DEFAULT);\n  cv.Scharr(grey, dstY, cv.CV_32F, 0, 1, 1, 0, cv.BORDER_DEFAULT);\n\n  const dstxDiv = cv.matFromArray(dstX.rows, dstX.cols, cv.CV_32F, divideByNumber(dstX.data32F, thicknessBrush));\n  const dstyDiv = cv.matFromArray(dstY.rows, dstY.cols, cv.CV_32F, divideByNumber(dstY.data32F, thicknessBrush));\n  dstX.delete();\n  dstY.delete();\n  return [dstxDiv, dstyDiv];\n  \n  //return [dstX, dstY]\n}\n\nexport function smooth(fieldX: Mat, fieldY: Mat, radius: number, iterations: number = 1) : [Mat, Mat] {\n  const s = 2 * radius + 1;\n  const ksize = new cv.Size(s, s);\n  \n  let dstX = new cv.Mat();\n  let dstY = new cv.Mat();\n  for(let i = 0; i < iterations; ++i) {\n    cv.GaussianBlur(fieldX, dstX, ksize, 0, 0, cv.BORDER_DEFAULT);\n    cv.GaussianBlur(fieldY, dstY, ksize, 0, 0, cv.BORDER_DEFAULT);\n  }\n  return [dstX, dstY];\n}\n\nexport function direction(fieldX: Mat, fieldY: Mat, i: number, j: number) : number {\n  return Math.atan2(fieldY.floatAt(i, j), fieldX.floatAt(i, j));\n}\n\nexport function magnitude(fieldX: Mat, fieldY: Mat, i: number, j: number) : number {\n  return Math.hypot(fieldX.floatAt(i, j), fieldY.floatAt(i, j));\n}\n","import { Mat } from \"opencv-ts\";\nimport { range } from \"lodash\";\n \nimport { colorSelect, rangeOfPixels, generateRandomGrid, computeColorProbabilities } from \"./tools\";\nimport { generateColorPalette, drawPalette, extendPalette, pixel } from \"./palette\";\nimport { toGray, resizeWithRatio } from \"./imageProcessingTool\";\nimport { createGradient, smooth, direction, magnitude } from \"./gradient\";\n\n\nfunction radiansToDegrees(radians: number) : number\n{\n  const pi = Math.PI;\n  return radians * (180/pi);\n}\n\nexport function computeThicknessBrush(width: number, height: number) :number {\n    const maxSize = Math.max(width, height);\n    // linear equation to apply properly the algorithm on both small and large images\n    const empiricalRatio = Math.round(0.001709 * maxSize - 0.9158);\n    return Math.max(1, empiricalRatio);\n}\n\ntype ProcessStateMachine = \"palette\" | \"grey\" |\"gradiants\" |\"gradiantSmooth\" |\"generateGrid\" |\"medianBlur\" | \"done\";\n\n\nexport const MAX_GRADIANT_SMOOTH_RATIO = 15.36;\nexport const CANVAS_IDS = [\n  \"drawPalette\",\n  \"greyOutput\",\n  \"canvasOutputX\",\n  \"canvasOutputY\",\n  \"canvasOutputXSmooth\",\n  \"canvasOutputYSmooth\",\n  \"medianBlur\",\n  \"finalResult\"\n];\n\nexport const ProcessStateMachineArray = [\n\"palette\",\n\"grey\",\n\"gradiants\",\n\"gradiantSmooth\",\n\"medianBlur\",\n\"generateGrid\",\n\"done\"\n];\n\n/////////////////////////////////////////////////////////////////////////////////\n// Delay in each method is here to \"cool down\" each step of pointillism algorithm\n/////////////////////////////////////////////////////////////////////////////////\n\n\nexport async function generatePalette(\n    imgElement: HTMLImageElement,\n    paletteSize: number,\n    hue: number,\n    saturation: number,\n    delay: number = 2000\n  ) : Promise<pixel[]> {\n  return new Promise((resolve) => {\n      let palette = generateColorPalette(imgElement, paletteSize);\n      palette = extendPalette(palette, hue, saturation);\n\n      drawPalette(CANVAS_IDS[0], palette);\n      setTimeout(() => resolve(palette), delay);\n  });\n}\n\nexport async function generateGreyImage(cv: any, src: Mat, delay: number = 2000) : Promise<Mat> {\n  return new Promise((resolve) => {\n    let grey: Mat = toGray(src);\n    cv.imshow(CANVAS_IDS[1], grey);\n    setTimeout(() => resolve(grey), delay);\n  });\n}\n\nexport async function generateGradiant(cv: any, grey: Mat, smoothnessGradiant: number, delay: number = 2000): Promise<[Mat, Mat]> {\n  return new Promise((resolve) => {\n    const gradiants = createGradient(grey, smoothnessGradiant);\n    cv.imshow(CANVAS_IDS[2], gradiants[0]);\n    cv.imshow(CANVAS_IDS[3], gradiants[1]);\n\n    setTimeout(() => resolve(gradiants), delay);\n  });\n}\n\nexport async function generateSmoothGradiant(cv: any, rows: number, cols: number, dstx: Mat, dsty: Mat, delay: number = 2000): Promise<[Mat, Mat]> {\n  return new Promise((resolve) => {\n    const gradientSmoothingRadius = Math.round(Math.max(rows, cols) / 50);\n    const gradientSmooths = smooth(dstx, dsty, gradientSmoothingRadius);\n    cv.imshow(CANVAS_IDS[4], gradientSmooths[0]);\n    cv.imshow(CANVAS_IDS[5], gradientSmooths[1]);\n\n    setTimeout(() => resolve(gradientSmooths), delay);\n  });\n}\n\nexport async function generateBlurMedian(cv: any, src: Mat, delay: number = 2000) : Promise<Mat> {\n  return new Promise((resolve) => {\n    let medianBlur = cv.Mat.zeros(src.cols, src.rows, cv.CV_32F);\n    cv.medianBlur(src, medianBlur, 11);\n    cv.imshow(CANVAS_IDS[6], medianBlur);\n\n    setTimeout(() => resolve(medianBlur), delay);\n  });\n}\n\nexport async function drawPointillism(\n  cv: any,\n  src: Mat,\n  medianBlur: Mat,\n  dstxSmooth: Mat,\n  dstySmooth: Mat,\n  grid: Array<any>,\n  palette: pixel[],\n  thicknessBrush: number,\n  delay: number = 2000\n  ) : Promise<unknown> {\n    const batchSize = 1000;\n    return new Promise((resolve) => {\n      range(0, grid.length, batchSize).forEach(progressIndex => {\n        const maxSize = Math.min((progressIndex + batchSize), grid.length)\n        const pixels = rangeOfPixels(src, grid, progressIndex, maxSize);\n        const colorProbabilities = computeColorProbabilities(pixels, palette);\n\n        for(let index = progressIndex; index < maxSize; index++) {\n          const [y, x] = grid[index];\n          const color = colorSelect(colorProbabilities[index % batchSize], palette);\n          const angle = radiansToDegrees(direction(dstxSmooth, dstySmooth, y, x)) + 90;\n          const length = Math.round(thicknessBrush + thicknessBrush * Math.sqrt(magnitude(dstxSmooth, dstySmooth, y, x)));\n          const scalar = new cv.Scalar(color[0], color[1], color[2], 255);\n          cv.ellipse(medianBlur, new cv.Point(x, y), new cv.Size(length, thicknessBrush), angle, 0, 360, scalar, -1, cv.LINE_AA);\n        }\n      });\n\n      cv.imshow(CANVAS_IDS[7],medianBlur);\n      setTimeout(() => resolve(\"ok\"), delay);\n    });\n}\n\n\nexport async function computePointillism(\n    cv: any,\n    imgElement: HTMLImageElement,\n    smoothnessGradiant: number,\n    thicknessBrush: number, \n    paletteSize: number,\n    hue: number,\n    saturation: number,\n    autoResize: boolean,\n    progressCallback: (progress: ProcessStateMachine) => void, delay: number = 2000\n  ) {\n  const palette = await generatePalette(imgElement, paletteSize, hue, saturation);\n  progressCallback(\"palette\");\n\n  let src = await cv.imread(imgElement);\n\n  const grey = await generateGreyImage(cv, src, delay);\n  progressCallback(\"grey\");\n  \n  const [dstX, dstY] = await generateGradiant(cv, grey, smoothnessGradiant, delay);\n  progressCallback(\"gradiants\")\n\n  const [dstxSmooth, dstySmooth] = await generateSmoothGradiant(cv, src.rows, src.cols, dstX, dstY, delay);\n  progressCallback(\"gradiantSmooth\")\n  \n  grey.delete();\n  dstX.delete();\n  dstY.delete();\n\n  if(autoResize) {\n    src = resizeWithRatio(src, 1280, 780);\n  }\n\n  let medianBlur = await generateBlurMedian(cv, src, delay);\n  progressCallback(\"medianBlur\")\n\n  const grid = generateRandomGrid(src.cols, src.rows);\n  setTimeout(() =>  progressCallback(\"generateGrid\"), delay);\n\n  const startTime = performance.now();\n  await drawPointillism(cv, src, medianBlur, dstxSmooth, dstySmooth, grid, palette, thicknessBrush, delay);\n  progressCallback(\"done\")\n  const endTime = performance.now();\n  console.log(\"Pointillism ->\", endTime - startTime);\n\n  src.delete();\n  medianBlur.delete();\n  dstxSmooth.delete();\n  dstySmooth.delete();\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport Stepper from \"./Components/Stepper\";\nimport UploadButton from \"./Components/UploadButton\";\nimport Loader from \"./Components/Loader\";\nimport ThicknessSlider from \"./Components/ThicknessSlider\";\nimport SmoothnessSlider from \"./Components/SmoothnessSlider\";\nimport PaletteSizeSlider from \"./Components/PaletteSizeSlider\";\nimport Footer from \"./Components/Footer\";\nimport NavBar from \"./Components/NavBar\";\nimport CanvasCard from \"./Components/CanvasCard\";\nimport ColorComponent from \"./Components/ColorComponent\";\n\nimport UseOpenCV from \"./Hooks/UseOpenCV\";\nimport { computePointillism, MAX_GRADIANT_SMOOTH_RATIO, CANVAS_IDS, ProcessStateMachineArray, computeThicknessBrush } from \"./Pointillism/pointillism\";\n\nexport const TITLE_FROM_CANVAS_IDS = [\n  \"Generate Palette\",\n  \"Grey Scale Image\",\n  \"Gradient on X axis\",\n  \"Gradient on Y axis\",\n  \"Gradient on X axis Smooth\",\n  \"Gradient on Y axis Smooth\",\n  \"Generate Median Blur Image\",\n  \"Final Result\"\n];\n\nconst initialCanvasCollapse = [false, false, false, false, false, false, false, false];\n\nfunction App() {\n  const { cv, openCVLoaded } = UseOpenCV();\n\n  const ref = useRef<HTMLImageElement>(null);\n  const refFinalResult = useRef<HTMLDivElement>(null);\n\n  const [progress, setProgress] = useState<string>(\"\");\n  const [validForm, setValidForm] = useState<boolean>(false);\n  const [autoresize, setAutoresize] = useState<boolean>(false);\n  const [runAlgo, setRunAlgo] = useState<boolean>(false);\n  const [smoothnessGradiant, setSmoothnessGradiant] = useState<number>((MAX_GRADIANT_SMOOTH_RATIO * 100) /2);\n  const [thickness, setThickness] = useState<number>(1);\n  const [paletteSize, setPaletteSize] = useState<number>(20);\n  const [hue, setHue] = useState<number>(20);\n  const [format, setFormat] = useState<string>(\"jpeg\");\n  const [saturation, setSaturation] = useState<number>(20);\n  const [visibilityCanvas, setVisibilityCanvas] = useState<boolean[]>(initialCanvasCollapse);\n  \n  useEffect(() => {\n    if(runAlgo && ref.current) {\n      computePointillism(cv, ref.current, smoothnessGradiant/100, thickness, paletteSize, hue, saturation, autoresize, progressCallback).then(() => {\n        setRunAlgo(false);\n        // show last canvas with the pointillism result\n        if(visibilityCanvas[visibilityCanvas.length - 1] === false) {\n          toggleCanvas(visibilityCanvas.length - 1);\n        }\n\n        if(refFinalResult.current) {\n          refFinalResult.current.scrollIntoView({behavior: \"smooth\"});\n        }\n      })\n    }\n  }, [cv, runAlgo])\n\n\n  function loadImage(event: React.ChangeEvent<HTMLInputElement>) {\n    if(event && event.target && event.target.files && ref.current) {\n      ref.current.src = URL.createObjectURL(event.target.files[0]);\n      ref.current.onload =  (event: any) => {\n          const thickness = computeThicknessBrush(event.target.width, event.target.height);\n          setThickness(thickness)\n      };\n    }\n  }\n\n\n  function progressCallback(progress: string) {\n    setProgress(progress);\n  }\n\n\n  function submit() {\n    setProgress(\"\");\n    setVisibilityCanvas(initialCanvasCollapse);\n    setRunAlgo(true);\n  }\n\n  function toggleCanvas(index: number) {\n    const newVisibiltyCanvas = visibilityCanvas.map((value, i) => {\n      if(index === i) {\n        return !value;\n      }\n      return value;\n    });\n    setVisibilityCanvas(newVisibiltyCanvas);\n  }\n\n  function renderAllCanvas() {\n    return CANVAS_IDS.map((id, index) => {\n        if(id === \"finalResult\") {\n          return (\n            <div className=\"w-full\" key={id} ref={refFinalResult}>\n              <CanvasCard\n                toggleCanvas={() => toggleCanvas(index)}\n                title={TITLE_FROM_CANVAS_IDS[index]}\n                canvasId={id}\n                collapsible={validForm}\n                collapse={visibilityCanvas[index]}\n                format={format}\n              />\n            </div>\n          );\n        } else {\n          return (\n            <CanvasCard\n              key={id}\n              toggleCanvas={() => toggleCanvas(index)}\n              title={TITLE_FROM_CANVAS_IDS[index]}\n              canvasId={id}\n              collapsible={validForm}\n              collapse={visibilityCanvas[index]}\n              format={format}\n            />\n          );\n        }\n      });\n  }\n\n  function renderForm() {\n    const content = runAlgo ?\n      <div className=\"flex justify-center\">\n        <Loader width=\"w-80\"/>\n      </div>\n    :\n    (\n      <div className=\"flex justify-center\">\n        <div className=\"flex flex-col items-center justify-center gap-8 py-4 w-4/5\">\n          <h2 className=\"flex text-3xl font-bold\">Settings</h2>\n          <UploadButton onChange={loadImage} />\n          <SmoothnessSlider value={smoothnessGradiant} min={1 * 100} max={MAX_GRADIANT_SMOOTH_RATIO * 100} onChange={(value) => setSmoothnessGradiant(parseInt(value, 10))} />\n          <ThicknessSlider value={thickness} min={1} max={20} onChange={(value) => setThickness(parseInt(value, 10))} />\n          <div className=\"w-full flex gap-5 items-center\">\n            <div className=\"w-2/4\">\n              <div className=\"form-control\">\n                <label className=\"cursor-pointer flex justify-between gap-2\">\n                  <span className=\"label-text text-neutral-content text-base font-semibold\">Resize Image </span> \n                  <input type=\"checkbox\" checked={autoresize} onChange={() => { setAutoresize((old) => !old); setThickness(1)} } className=\"checkbox checkbox-primary checkbox-md\" />\n                </label>\n              </div>\n              <span className=\"text-xs\">Recommanded for heavy images on low configuration.</span>\n            </div>\n            \n            <div className=\"divider divider-vertical\"></div>\n\n            <div className=\"w-2/4 flex flex-col gap-2\">\n              <select onChange={(e) =>setFormat(e.target.value)} value={format} className=\"select select-bordered select-primary max-w-xs text-primary bg-opacity-50\">\n                <option disabled>Select output format</option>\n                <option value=\"png\">Png</option>\n                <option value=\"jpeg\">Jpeg</option>\n              </select>\n              <span className=\"text-xs\">Output format of the image. While Png preserve quality, Jpeg is a lightweight format.</span>\n            </div>\n          </div>\n          <details className=\"w-full\">\n            <summary className=\"text-xl\">Advanced</summary>\n            <div className=\"flex flex-col gap-8 pt-4\">\n              <PaletteSizeSlider value={paletteSize} onChange={(value) => setPaletteSize(parseInt(value, 10))}/>\n              <ColorComponent hue={hue} saturation={saturation} onChangeHue={setHue} onChangeSaturation={setSaturation} />\n            </div>\n          </details>\n          <div className=\"w-2/4 flex flex-col gap-2\">\n            <button className=\"btn btn-primary w-full h-16\" disabled={!validForm} onClick={submit}>Generate</button>\n            <p className=\"text-xs italic opacity-60\">We don't collect or share images. Everything is done locally</p>\n          </div>\n        </div>\n      </div>\n   );\n\n    return (\n      <div className=\"card glass text-neutral-content\">\n        {content}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-img\">\n      <div className=\"container mx-auto flex flex-col gap-5 bg-neutral\">\n        <NavBar/>\n        <div className=\"flex flex-col px-4 flex flex-col gap-5\" >\n          <div className=\"alert alert-warning\">\n            <div className=\"flex-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\"> \n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n              </svg> \n              <label>The algorithm is resource intensive. So it may not finish on mobile phone or low configuration. Please consider resize option</label>\n            </div>\n          </div>\n            {\n              !openCVLoaded ?\n              (<div className=\"flex flex-col items-center text-neutral-content\">\n                <Loader/>\n                Loading OpenCV library\n              </div>)\n              :\n              renderForm()\n            }\n            <img className=\"hidden\" id=\"imageSrc\" alt=\"No Image\" ref={ref} onLoad={() => setValidForm(true)}/>\n            <div className=\"w-full flex flex-col items-center gap-8 p-5 card glass text-neutral-content rounded-box\">\n              <h2 className=\"text-3xl font-bold text-neutral-content\">Results</h2>\n              <Stepper steps={ProcessStateMachineArray} currentStep={progress} />\n              <div className=\"w-full flex flex-col items-center gap-2\">\n                {renderAllCanvas()}\n              </div>\n            </div>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}