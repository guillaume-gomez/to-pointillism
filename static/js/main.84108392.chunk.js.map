{"version":3,"sources":["Components/Stepper.tsx","Components/UploadButton.tsx","Components/Loader.tsx","Components/Slider.tsx","Components/Footer.tsx","Components/NavBar.tsx","Components/CanvasCard.tsx","Hooks/UseOpenCV.tsx","Pointillism/tools.ts","Pointillism/palette.ts","Pointillism/colorTools.ts","Pointillism/imageProcessingTool.ts","Pointillism/gradient.ts","Pointillism/pointillism.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Stepper","steps","currentStep","useState","stepIndex","setStepIndex","useEffect","stpIndex","findIndex","step","className","map","index","UploadButton","onChange","fill","xmlns","viewBox","d","type","Loader","width","height","version","id","x","y","enableBackground","attributeName","attributeType","dur","from","to","repeatCount","Slider","value","label","min","max","event","target","Footer","NavBar","aria-label","href","CanvasCard","toggleCanvas","title","canvasId","collapsible","refCanvas","useRef","refA","onClick","ref","current","dataURL","toDataURL","download","replace","window","open","UseOpenCV","openCVLoaded","setOpenCVLoaded","cv","onRuntimeInitialized","getRandomIntInclusive","Math","ceil","floor","random","mod","n","m","generateRandomGrid","scale","ratio","grid","i","j","push","shuffle","rangeOfPixels","image","slice","col","row","ucharPtr","colorSelect","probabilities","palette","r","bisect_left","length","computeColorProbabilities","pixels","k","distances","arrayDist","maxima","arrayMax","summ","subArray","sum","divideArray","expArray","cumulativeSum","array1","array2","point1","point2","x1","y1","z1","x2","y2","z2","sqrt","distance","array","a","b","arrayVal","val","exp","generateColorPalette","ColorThief","getPalette","extendPalette","moreSaturatedPalette","red","green","blue","convert","rgb","hsl","hue","saturation","lightness","saturate","moreSaturated","moreHuePaletteGenerator","rotation","rotateHue","newHue","drawPalette","canvas","document","getElementById","getContext","context","widthColor","heightColor","yMax","fillStyle","fillRect","resizeWithRatio","maxWidth","maxHeight","Error","cols","rows","size","Size","dst","Mat","resize","INTER_AREA","toGray","imageSource","grey","CV_8UC4","cvtColor","COLOR_RGB2GRAY","createGradient","thicknessBrush","divideByNumber","data","dstX","dstY","Scharr","CV_32F","BORDER_DEFAULT","dstxDiv","matFromArray","data32F","dstyDiv","delete","smooth","fieldX","fieldY","radius","iterations","s","ksize","GaussianBlur","direction","atan2","floatAt","magnitude","hypot","radiansToDegrees","radians","PI","CANVAS_IDS","ProcessStateMachineArray","generatePalette","imgElement","delay","Promise","resolve","setTimeout","generateGreyImage","src","imshow","generateGradiant","gradiants","generateSmoothGradiant","dstx","dsty","gradientSmoothingRadius","round","gradientSmooths","generateBlurMedian","medianBlur","zeros","drawPointillism","dstxSmooth","dstySmooth","batchSize","strokeScaleDivider","strokeScale","range","forEach","progressIndex","colorProbabilities","color","angle","scalar","Scalar","ellipse","Point","LINE_AA","autoResize","progressCallback","imread","TITLE_FROM_CANVAS_IDS","intialCanvasVisibility","App","refFinalResult","progress","setProgress","validForm","setValidForm","autoresize","setAutoresize","runAlgo","setRunAlgo","setThicknessBrush","visibilityCanvas","setVisibilityCanvas","loadImage","files","URL","createObjectURL","submit","newVisibiltyCanvas","computePointillism","then","scrollIntoView","behavior","strokeLinecap","strokeLinejoin","strokeWidth","content","MAX_THICKNESS_BRUSH","parseInt","checked","old","disabled","renderForm","alt","onLoad","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.84108392.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { findIndex } from \"lodash\";\n\ninterface StepperInterface {\n  steps: string[];\n  currentStep: string;\n}\n\nfunction Stepper({ steps, currentStep }: StepperInterface): React.ReactElement {\n  const [stepIndex, setStepIndex] = useState<number>(0);\n  \n  useEffect(()=> {\n    const stpIndex = findIndex(steps, (step) => step === currentStep);\n    if(stpIndex === -1) {\n      setStepIndex(0);\n    } else {\n      setStepIndex(stpIndex);\n    }\n  }, [currentStep]);\n\n  return (\n    <ul className=\"steps w-full overflow-auto\">\n      {\n        steps.map((step, index) => {\n          if(index <= stepIndex) {\n            return (\n              <li key={step} className=\"step step-success text-neutral-content\">\n                <span className=\"hidden lg:block xl:block 2xl:block\">{step}</span>\n              </li>\n            );\n          }\n          return (\n            <li key={step} className=\"step text-neutral-content\">\n              <span className=\"hidden lg:block xl:block 2xl:block\">{step}</span>\n            </li>\n            );\n        })\n      }\n    </ul>\n  );\n}\n\nexport default Stepper;\n\n\n","import React, { useEffect, useRef, useState } from 'react';\n\ninterface UploadButtonInterface {\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nfunction UploadButton({ onChange } : UploadButtonInterface): React.ReactElement {\n  return (\n      <label className=\"w-full flex flex-col items-center px-4 py-6 bg-white text-primary rounded-lg shadow-lg tracking-wide uppercase border-2 border-primary transition duration-300 ease-in-out bg-opacity-50 cursor-pointer hover:bg-primary hover:text-white\">\n        <svg className=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n          <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n        </svg>\n        <span className=\"mt-2 leading-normal\">Select a file</span>\n        <input type='file' className=\"hidden\" onChange={onChange} />\n      </label>\n    \n  );\n}\n\nexport default UploadButton;\n\n\n","import React, { useEffect, useRef, useState } from 'react';\n\ninterface LoaderInterface {\n  width?: string;\n  height?: string;\n}\n\nfunction Loader({ width = \"w-28\", height = \"w-28\"} : LoaderInterface): React.ReactElement {\n  return (\n    <svg className={`${width} ${height}`} version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" >\n      <path fill=\"white\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n        <animateTransform \n           attributeName=\"transform\" \n           attributeType=\"XML\" \n           type=\"rotate\"\n           dur=\"1s\" \n           from=\"0 50 50\"\n           to=\"360 50 50\" \n           repeatCount=\"indefinite\" />\n    </path>\n  </svg>\n  );\n}\n\nexport default Loader;\n\n\n","import React, { useEffect, useRef, useState } from 'react';\n\ninterface SliderInterface {\n  value: number;\n  label: string;\n  onChange: (value: string) => void;\n  min?: number;\n  max?: number;\n  step?: number\n}\n\nfunction Slider({ value, label, onChange, min = 1, max = 100, step = 1 } : SliderInterface): React.ReactElement {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between\">\n        <label>More Artistic</label>\n        <label>More Realistic</label>\n      </div>\n      <input type=\"range\" onChange={(event) => onChange(event.target.value)} min={min} max={max} value={value} step={step} className=\"range range-primary\"></input> \n      <span>{value}</span>\n   </div>\n  );\n}\n\nexport default Slider;\n","import React from 'react';\n\nfunction Footer(): React.ReactElement {\n  return (\n    <footer className=\"p-4 footer bg-base-300 text-base-content footer-center p-6\">\n      <div>\n        <p> 2021 - Made By Guillaume Gomez</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction NavBar(): React.ReactElement {\n  return (\n     <div className=\"navbar mb-2 bg-accent text-neutral-content p-6\">\n      <div className=\"px-2 mx-2 navbar-start\">\n        <span className=\"text-2xl font-bold\">\n          Pointillism\n        </span>\n      </div> \n      <div className=\"navbar-end\">\n        <a aria-label=\"Github\" target=\"_blank\" href=\"https://github.com/guillaume-gomez/to-pointillism\" className=\"btn btn-square btn-ghost\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"inline-block w-6 h-6 fill-current\"><path d=\"M256,32C132.3,32,32,134.9,32,261.7c0,101.5,64.2,187.5,153.2,217.9a17.56,17.56,0,0,0,3.8.4c8.3,0,11.5-6.1,11.5-11.4,0-5.5-.2-19.9-.3-39.1a102.4,102.4,0,0,1-22.6,2.7c-43.1,0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1,1.4-14.1h.1c22.5,2,34.3,23.8,34.3,23.8,11.2,19.6,26.2,25.1,39.6,25.1a63,63,0,0,0,25.6-6c2-14.8,7.8-24.9,14.2-30.7-49.7-5.8-102-25.5-102-113.5,0-25.1,8.7-45.6,23-61.6-2.3-5.8-10-29.2,2.2-60.8a18.64,18.64,0,0,1,5-.5c8.1,0,26.4,3.1,56.6,24.1a208.21,208.21,0,0,1,112.2,0c30.2-21,48.5-24.1,56.6-24.1a18.64,18.64,0,0,1,5,.5c12.2,31.6,4.5,55,2.2,60.8,14.3,16.1,23,36.6,23,61.6,0,88.2-52.4,107.6-102.3,113.3,8,7.1,15.2,21.1,15.2,42.5,0,30.7-.3,55.5-.3,63,0,5.4,3.1,11.5,11.4,11.5a19.35,19.35,0,0,0,4-.4C415.9,449.2,480,363.1,480,261.7,480,134.9,379.7,32,256,32Z\"></path></svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { findIndex } from \"lodash\";\n\ninterface CanvasCardInterface {\n  toggleCanvas: () => void;\n  title: string;\n  canvasId: string;\n  collapsible: boolean;\n}\n\nfunction CanvasCard({ toggleCanvas, title, canvasId, collapsible }: CanvasCardInterface): React.ReactElement {\n  const refCanvas = useRef<HTMLCanvasElement>(null);\n  const refA = useRef<HTMLAnchorElement>(null);\n\n  function saveImage() {\n    if(refCanvas.current && refA.current) {\n      const dataURL = refCanvas.current.toDataURL(\"image/png\");\n      (refA.current as any).download = \"image.png\";\n      refA.current.href = dataURL.replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n      const newTab = window.open('about:blank','image from canvas');\n    }\n  }\n\n  return (\n    <div className={`card glass text-neutral-content collapse w-full border rounded-box border-base-300 collapse-arrow ${collapsible ? \"\" : \"collapse-close\"}`}>\n      <input type=\"checkbox\" onClick={() => toggleCanvas()}/>\n      <div className=\"collapse-title text-xl font-medium\">\n        {title}\n      </div>\n      <div className=\"collapse-content flex flex-col justify-center gap-3\"> \n        <canvas ref={refCanvas} className={`max-w-full`} id={canvasId}/>\n        <div>\n          <div className=\"flex flex-row-reverse\">\n            <a ref={refA} className=\"btn btn-primary\" onClick={saveImage}>Save</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CanvasCard;\n\n\n","import cv from \"opencv-ts\";\nimport { useEffect, useState } from 'react';\n\ninterface UseOpenCVInterface {\n  openCVLoaded : boolean;\n  cv: any;\n}\n\nfunction UseOpenCV(): UseOpenCVInterface {\n  const [openCVLoaded, setOpenCVLoaded] = useState<boolean>(false);\n  \n  useEffect(() => {\n    cv.onRuntimeInitialized = () => setOpenCVLoaded(true)\n  }, [setOpenCVLoaded]);\n\n  return { openCVLoaded, cv };\n}\n\nexport default UseOpenCV;\n","import { Mat } from \"opencv-ts\";\nimport ColorThief from 'colorthief';\nimport convert from \"color-convert\";\nimport { shuffle, max, sum } from \"lodash\";\n\nimport { saturate, rotateHue } from \"./colorTools\";\n\nimport { bisect_left } from \"aureooms-js-bisect\";\n\ntype pixel = [number, number, number];\n\nfunction getRandomIntInclusive(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\n// https://web.archive.org/web/20090717035140if_/javascript.about.com/od/problemsolving/a/modulobug.htm\nfunction mod(n : number, m: number) : number {\n  return ((n % m) + m) % m;\n}\n\nexport function generateRandomGrid(width: number, height: number, scale: number = 3) {\n  const ratio = (scale / 2) >> 0;\n  let grid : Array<any> = [];\n\n  for(let i = 0; i < height; i = i + scale) {\n    for(let j = 0; j < width; j = j + scale) {\n      const y = getRandomIntInclusive(-ratio, ratio) + i;\n      const x = getRandomIntInclusive(-ratio, ratio) + j;\n\n      grid.push([mod(y, height), mod(x, width)])\n    }\n  }\n  return shuffle(grid);\n}\n\nexport function rangeOfPixels(image: Mat, grid: Array<[number, number]>, min: number, max: number ) : pixel[] {\n  return grid.slice(min, max).map(([col, row]) => image.ucharPtr(col, row) as pixel)\n}\n\n\nexport function colorSelect(probabilities : number[], palette : pixel[]): pixel {\n  const r = Math.random();\n  const index : number = bisect_left(probabilities, r);\n\n  if(index < palette.length) {\n    return palette[index];\n  } else {\n    return palette[palette.length - 1];\n  }\n}\n\nexport function computeColorProbabilities(pixels: pixel[], palette: pixel[], k=9) : number[][] {\n  let distances = arrayDist(pixels, palette);\n  const maxima = arrayMax(distances);\n\n  distances = subArray(maxima, distances);\n  let summ = distances.map(row => sum(row));\n  distances = divideArray(summ, distances);\n\n  distances = expArray(k*palette.length, distances);\n  summ = distances.map(row => sum(row));\n  distances = divideArray(summ, distances);\n\n  return cumulativeSum(distances);\n}\n\n\nfunction distance([x1, y1, z1]: pixel, [x2, y2, z2]: pixel): number {\n  return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2 + (z1 - z2) ** 2);\n}\n\nfunction arrayDist(array1: pixel[], array2: pixel[]) : number[][] {\n  return array1.map( (point1) =>\n    array2.map( (point2) => \n      distance(point1, point2)\n    )\n  );\n}\n\nfunction arrayMax(array: number[][]) : number[] {\n  return array.map((subArray) => max(subArray) as number);\n}\n\n\n\nfunction subArray(a: number[], b: number[][]) : number[][] {\n  return b.map((arrayVal, index) => \n    arrayVal.map(val =>\n      (a[index] - val)\n    )\n  );\n}\n\nfunction divideArray(a: number[], b: number[][]) : number[][] {\n  return b.map((arrayVal, index) => \n    arrayVal.map(val =>\n      ( val / a[index])\n    )\n  );\n}\n\nfunction expArray(a: number, b: number[][]) : number[][] {\n  return b.map((arrayVal) => \n    arrayVal.map(val =>\n       Math.exp(val * a)\n    )\n  );\n}\n\nfunction cumulativeSum(array: number[][]) : number[][] {\n  const cumulativeSumOP = ((sum: number) => (value:number) => sum += value);\n  return array.map(row =>\n     row.map(cumulativeSumOP(0))\n  );\n}","import ColorThief from 'colorthief';\nimport convert from \"color-convert\";\nimport { saturate, rotateHue } from \"./colorTools\";\n\nconst PALETTE_BASE_COLOR = 20;\nexport type pixel = [number, number, number];\n\nexport function generateColorPalette(image: HTMLImageElement) : pixel[] {\n  let colorThief = new ColorThief();\n  return colorThief.getPalette(image, PALETTE_BASE_COLOR);\n}\n\nexport function extendPalette(palette: pixel[]) : pixel[] {\n  const moreSaturatedPalette = palette.map(([red, green, blue]) => {\n    const [hue, saturation, lightness] = convert.rgb.hsl(red, green, blue);\n    const [_, moreSaturated, __] = saturate([hue, saturation, lightness], 20);\n    return convert.hsl.rgb([hue, moreSaturated, lightness]);\n  });\n\n  function moreHuePaletteGenerator() {\n    return palette.map(([red, green, blue]) => {\n      const random = Math.random() * (20 - -20) + -20;\n      \n      const [hue, saturation, lightness] = convert.rgb.hsl(red, green, blue);\n      const [newHue, _, __] = rotateHue([hue, saturation, lightness], random);\n      return convert.hsl.rgb([newHue, saturation, lightness]);\n    });\n  }\n  return [...palette.slice(0), ...moreSaturatedPalette, ...moreHuePaletteGenerator(), ...moreHuePaletteGenerator()];\n}\n\nexport function drawPalette(canvasId: string, palette: pixel[]) : void {\n  let canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n  if (!canvas.getContext) {\n    throw \"cannot find canvas to draw palette\";\n  }\n  let context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n  const nbBaseColor = PALETTE_BASE_COLOR;\n  \n  const widthColor = canvas.width / nbBaseColor;\n  const heightColor = widthColor;\n\n  const yMax = palette.length / nbBaseColor;\n\n  for(let y = 0; y < yMax; ++y) {\n    for(let x = 0; x < nbBaseColor; ++x) {\n      const [red, green, blue] = palette[x + y * nbBaseColor];\n      context.fillStyle = `rgb(${red}, ${green}, ${blue})`;\n      context.fillRect(widthColor * x, heightColor * y, widthColor, heightColor);\n    }\n  }\n}","type colorType = [number, number, number];\n\n\nexport function saturate([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, Math.min(100, saturation + x), lightness];\n}\n\n\nexport function desaturate([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, Math.max(0, saturation - x), lightness];\n}\n\n\nexport function lighten([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, saturation, Math.min(100, lightness + x)];\n}\n\n\nexport function darken([hue, saturation, lightness]: colorType, x: number) : colorType {\n  return [hue, saturation, Math.max(0, lightness - x)];\n}\n\nexport function rotateHue([hue, saturation, lightness]: colorType, rotation: number) : colorType {\n  const modulo = (x: number, n: number) : number => (x % n + n) % n;\n  const newHue = modulo(hue + rotation, 360);\n  return [newHue, saturation, lightness];\n}","import cv, { Mat, Size } from \"opencv-ts\";\n\nexport function resize(image: Mat, width: number, height: number) : Mat {\n  const newImage: Mat = new cv.Mat(image.cols, image.rows, cv.CV_8UC4);\n  cv.resize(image, newImage, new cv.Size(width, height), 0, 0, cv.INTER_AREA);\n  return newImage;\n}\n\nexport function resizeWithRatio(image: Mat, maxWidth: number, maxHeight: number) : Mat {\n  if (maxWidth === 0) {\n    throw new Error(\"resize : maxWidth is equal to zero. Please fill a value > 0\");\n  }\n\n  if (maxHeight === 0) {\n    throw new Error(\"resize : maxHeight is equal to zero. Please fill a value > 0\");\n  }\n\n  const ratio = Math.min(1.0, maxWidth / image.cols, maxHeight / image.rows);\n\n  if(ratio !== 1.0) {\n    const size : Size = new cv.Size(image.cols * ratio, image.rows * ratio);\n    let dst = new cv.Mat();\n    cv.resize(image, dst, size, 0, 0, cv.INTER_AREA);\n    return dst;\n  }\n\n  return image\n}\n\nexport function toGray(imageSource: Mat) : Mat {\n  let grey: Mat = new cv.Mat(imageSource.cols, imageSource.rows, cv.CV_8UC4);\n  cv.cvtColor(imageSource, grey, cv.COLOR_RGB2GRAY)\n  return grey;\n}\n\n","import cv, { Mat } from \"opencv-ts\";\n\n// thickness brush has a value from 1 to 15.36\nexport function createGradient(grey: Mat, thicknessBrush: number) : [Mat, Mat] {\n  function divideByNumber(data: number[], x: number) : number[] {\n    return data.map(d => d/x);\n  }\n\n  let dstX = new cv.Mat();\n  let dstY = new cv.Mat();\n  cv.Scharr(grey, dstX, cv.CV_32F, 1, 0, 1, 0, cv.BORDER_DEFAULT);\n  cv.Scharr(grey, dstY, cv.CV_32F, 0, 1, 1, 0, cv.BORDER_DEFAULT);\n\n  const dstxDiv = cv.matFromArray(dstX.rows, dstX.cols, cv.CV_32F, divideByNumber(dstX.data32F, thicknessBrush));\n  const dstyDiv = cv.matFromArray(dstY.rows, dstY.cols, cv.CV_32F, divideByNumber(dstY.data32F, thicknessBrush));\n  dstX.delete();\n  dstY.delete();\n  return [dstxDiv, dstyDiv];\n  \n  //return [dstX, dstY]\n}\n\nexport function smooth(fieldX: Mat, fieldY: Mat, radius: number, iterations: number = 1) : [Mat, Mat] {\n  const s = 2 * radius + 1;\n  const ksize = new cv.Size(s, s);\n  \n  let dstX = new cv.Mat();\n  let dstY = new cv.Mat();\n  for(let i = 0; i < iterations; ++i) {\n    cv.GaussianBlur(fieldX, dstX, ksize, 0, 0, cv.BORDER_DEFAULT);\n    cv.GaussianBlur(fieldY, dstY, ksize, 0, 0, cv.BORDER_DEFAULT);\n  }\n  return [dstX, dstY];\n}\n\nexport function direction(fieldX: Mat, fieldY: Mat, i: number, j: number) : number {\n  return Math.atan2(fieldY.floatAt(i, j), fieldX.floatAt(i, j));\n}\n\nexport function magnitude(fieldX: Mat, fieldY: Mat, i: number, j: number) : number {\n  return Math.hypot(fieldX.floatAt(i, j), fieldY.floatAt(i, j));\n}\n","import { Mat } from \"opencv-ts\";\nimport { range } from \"lodash\";\n \nimport { colorSelect, rangeOfPixels, generateRandomGrid, computeColorProbabilities } from \"./tools\";\nimport { generateColorPalette, drawPalette, extendPalette, pixel } from \"./palette\";\nimport { toGray, resizeWithRatio } from \"./imageProcessingTool\";\nimport { createGradient, smooth, direction, magnitude } from \"./gradient\";\n\n\nfunction radiansToDegrees(radians: number) : number\n{\n  const pi = Math.PI;\n  return radians * (180/pi);\n}\n\ntype ProcessStateMachine = \"palette\" | \"grey\" |\"gradiants\" |\"gradiantSmooth\" |\"generateGrid\" |\"medianBlur\" | \"done\";\n\n\nexport const MAX_THICKNESS_BRUSH = 15.36;\nexport const CANVAS_IDS = [\n  \"drawPalette\",\n  \"greyOutput\",\n  \"canvasOutputX\",\n  \"canvasOutputY\",\n  \"canvasOutputXSmooth\",\n  \"canvasOutputYSmooth\",\n  \"medianBlur\",\n  \"finalResult\"\n];\n\nexport const ProcessStateMachineArray = [\n\"palette\",\n\"grey\",\n\"gradiants\",\n\"gradiantSmooth\",\n\"medianBlur\",\n\"generateGrid\",\n\"done\"\n];\n\n/////////////////////////////////////////////////////////////////////////////////\n// Delay in each method is here to \"cool down\" each step of pointillism algorithm\n/////////////////////////////////////////////////////////////////////////////////\n\n\nexport async function generatePalette(imgElement: HTMLImageElement, delay: number = 2000) : Promise<pixel[]> {\n  return new Promise((resolve) => {\n      let palette = generateColorPalette(imgElement);\n      palette = extendPalette(palette);\n\n      drawPalette(CANVAS_IDS[0], palette);\n      setTimeout(() => resolve(palette), delay);\n  });\n}\n\nexport async function generateGreyImage(cv: any, src: Mat, delay: number = 2000) : Promise<Mat> {\n  return new Promise((resolve) => {\n    let grey: Mat = toGray(src);\n    cv.imshow(CANVAS_IDS[1], grey);\n    setTimeout(() => resolve(grey), delay);\n  });\n}\n\nexport async function generateGradiant(cv: any, grey: Mat, thicknessBrush: number, delay: number = 2000): Promise<[Mat, Mat]> {\n  return new Promise((resolve) => {\n    const gradiants = createGradient(grey, thicknessBrush);\n    cv.imshow(CANVAS_IDS[2], gradiants[0]);\n    cv.imshow(CANVAS_IDS[3], gradiants[1]);\n\n    setTimeout(() => resolve(gradiants), delay);\n  });\n}\n\nexport async function generateSmoothGradiant(cv: any, rows: number, cols: number, dstx: Mat, dsty: Mat, delay: number = 2000): Promise<[Mat, Mat]> {\n  return new Promise((resolve) => {\n    const gradientSmoothingRadius = Math.round(Math.max(rows, cols) / 50);\n    const gradientSmooths = smooth(dstx, dsty, gradientSmoothingRadius);\n    cv.imshow(CANVAS_IDS[4], gradientSmooths[0]);\n    cv.imshow(CANVAS_IDS[5], gradientSmooths[1]);\n\n    setTimeout(() => resolve(gradientSmooths), delay);\n  });\n}\n\nexport async function generateBlurMedian(cv: any, src: Mat, delay: number = 2000) : Promise<Mat> {\n  return new Promise((resolve) => {\n    let medianBlur = cv.Mat.zeros(src.cols, src.rows, cv.CV_32F);\n    cv.medianBlur(src, medianBlur, 11);\n    cv.imshow(CANVAS_IDS[6], medianBlur);\n\n    setTimeout(() => resolve(medianBlur), delay);\n  });\n}\n\nexport async function drawPointillism(\n  cv: any,\n  src: Mat,\n  medianBlur: Mat,\n  dstxSmooth: Mat,\n  dstySmooth: Mat,\n  grid: Array<any>,\n  palette: pixel[],\n  delay: number = 2000\n  ) : Promise<unknown> {\n  \n    const batchSize = 1000;\n    // magic number to apply properly the algorithm on both small and image\n    const strokeScaleDivider = Math.max(src.rows, src.cols) * 1000 /1900;\n    const strokeScale = Math.floor(Math.max(src.rows, src.cols) / strokeScaleDivider);\n    return new Promise((resolve) => {\n      range(0, grid.length, batchSize).forEach(progressIndex => {\n        const pixels = rangeOfPixels(src, grid, progressIndex, progressIndex + batchSize);\n        const colorProbabilities = computeColorProbabilities(pixels, palette);\n        grid.slice(progressIndex, Math.min((progressIndex + batchSize), grid.length)).forEach(([y, x], index) => {\n          const color = colorSelect(colorProbabilities[index], palette);\n          const angle = radiansToDegrees(direction(dstxSmooth, dstySmooth, y, x)) + 90;\n          const length = Math.round(strokeScale + strokeScale * Math.sqrt(magnitude(dstxSmooth, dstySmooth, y, x)));\n          const scalar = new cv.Scalar(color[0], color[1], color[2], 255);\n          cv.ellipse(medianBlur, new cv.Point(x, y), new cv.Size(length, strokeScale), angle, 0, 360, scalar, -1, cv.LINE_AA);\n        });\n      });\n\n      cv.imshow(CANVAS_IDS[7],medianBlur);\n      setTimeout(() => resolve(\"ok\"), delay);\n    });\n}\n\n\nexport async function computePointillism(\n    cv: any,\n    imgElement: HTMLImageElement,\n    thicknessBrush: number,\n    autoResize: boolean,\n    progressCallback: (progress: ProcessStateMachine) => void, delay: number = 2000\n  ) {\n  const palette = await generatePalette(imgElement);\n  progressCallback(\"palette\");\n\n  let src = await cv.imread(imgElement);\n\n  const grey = await generateGreyImage(cv, src, delay);\n  progressCallback(\"grey\");\n  \n  const [dstX, dstY] = await generateGradiant(cv, grey, thicknessBrush, delay);\n  progressCallback(\"gradiants\")\n\n  const [dstxSmooth, dstySmooth] = await generateSmoothGradiant(cv, src.rows, src.cols, dstX, dstY, delay);\n  progressCallback(\"gradiantSmooth\")\n  \n  grey.delete();\n  dstX.delete();\n  dstY.delete();\n\n  if(autoResize) {\n    src = resizeWithRatio(src, 1280, 780);\n  }\n\n  let medianBlur = await generateBlurMedian(cv, src, delay);\n  progressCallback(\"medianBlur\")\n\n  const grid = generateRandomGrid(src.cols, src.rows);\n  setTimeout(() =>  progressCallback(\"generateGrid\"), delay);\n\n\n  await drawPointillism(cv, src, medianBlur, dstxSmooth, dstySmooth, grid, palette ,delay);\n  progressCallback(\"done\")\n\n  src.delete();\n  medianBlur.delete();\n  dstxSmooth.delete();\n  dstySmooth.delete();\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { range } from \"lodash\";\nimport Stepper from \"./Components/Stepper\";\nimport UploadButton from \"./Components/UploadButton\";\nimport Loader from \"./Components/Loader\";\nimport Slider from \"./Components/Slider\";\nimport Footer from \"./Components/Footer\";\nimport NavBar from \"./Components/NavBar\";\nimport CanvasCard from \"./Components/CanvasCard\";\n\nimport UseOpenCV from \"./Hooks/UseOpenCV\";\nimport { computePointillism, MAX_THICKNESS_BRUSH, CANVAS_IDS, ProcessStateMachineArray } from \"./Pointillism/pointillism\";\n\nexport const TITLE_FROM_CANVAS_IDS = [\n  \"Generate Palette\",\n  \"Grey Scale Image\",\n  \"Gradient on X axis\",\n  \"Gradient on Y axis\",\n  \"Gradient on X axis Smooth\",\n  \"Gradient on Y axis Smooth\",\n  \"Generate Median Blur Image\",\n  \"Final Result\"\n];\n\nconst intialCanvasVisibility = [false, false, false, false, false, false, false, false];\n\nfunction App() {\n  const { cv, openCVLoaded } = UseOpenCV();\n\n  const ref = useRef<HTMLImageElement>(null);\n  const refFinalResult = useRef<HTMLDivElement>(null);\n  const refCanvas = useRef<HTMLCanvasElement[]>([]);\n\n  const [progress, setProgress] = useState<string>(\"\");\n  const [validForm, setValidForm] = useState<boolean>(false);\n  const [autoresize, setAutoresize] = useState<boolean>(false);\n  const [runAlgo, setRunAlgo] = useState<boolean>(false);\n  const [thicknessBrush, setThicknessBrush] = useState<number>(100);\n  const [visibilityCanvas, setVisibilityCanvas] = useState<boolean[]>(intialCanvasVisibility);\n\n  useEffect(() => {\n    if(runAlgo && ref.current) {\n      computePointillism(cv, ref.current, thicknessBrush/100, autoresize, progressCallback).then(() => {\n        setRunAlgo(false);\n        if(refFinalResult.current) {\n          refFinalResult.current.scrollIntoView({behavior: \"smooth\"});\n        }\n      })\n    }\n  }, [cv, runAlgo])\n\n\n  function loadImage(event: React.ChangeEvent<HTMLInputElement>) {\n    if(event && event.target && event.target.files && ref.current) {\n      ref.current.src = URL.createObjectURL(event.target.files[0]);\n    }\n  }\n\n  function progressCallback(progress: string) {\n    setProgress(progress);\n  }\n\n\n  function submit() {\n    setProgress(\"\");\n    setVisibilityCanvas(intialCanvasVisibility);\n    setRunAlgo(true);\n  }\n\n  function toggleCanvas(index: number) {\n    const newVisibiltyCanvas = visibilityCanvas.map((value, i) => {\n      if(index === i) {\n        return !value;\n      }\n      return value;\n    });\n    setVisibilityCanvas(newVisibiltyCanvas);\n  }\n\n  function renderAllCanvas() {\n    return CANVAS_IDS.map((id, index) => {\n        if(id === \"finalResult\") {\n          return (\n            <div className=\"w-full\" key={id} ref={refFinalResult}>\n              <CanvasCard\n                toggleCanvas={() => toggleCanvas(index)}\n                title={TITLE_FROM_CANVAS_IDS[index]}\n                canvasId={id}\n                collapsible={validForm}\n              />\n            </div>\n          );\n        } else {\n          return (\n            <CanvasCard\n              key={id}\n              toggleCanvas={() => toggleCanvas(index)}\n              title={TITLE_FROM_CANVAS_IDS[index]}\n              canvasId={id}\n              collapsible={validForm}\n            />\n          );\n        }\n      });\n  }\n\n  function renderForm() {\n    const content = runAlgo ?\n      <div className=\"flex justify-center\">\n        <Loader width=\"w-80\"/>\n      </div>\n    :\n    (\n      <div className=\"flex flex-col items-center gap-3 w-full p-4\">\n        <h2 className=\"flex self-start text-xl font-bold\">Settings</h2>\n        <UploadButton onChange={loadImage} />\n        <Slider label=\"thickness brush\" value={thicknessBrush} min={1 * 100} max={MAX_THICKNESS_BRUSH * 100} onChange={(value) => setThicknessBrush(parseInt(value))} />\n        <div className=\"self-start\">\n          <div className=\"form-control\">\n            <label className=\"cursor-pointer flex gap-2\">\n              <span className=\"label-text text-base\">Resize Image </span> \n              <input type=\"checkbox\" checked={autoresize} onChange={() => setAutoresize((old) => !old)} className=\"checkbox checkbox-primary\" />\n            </label>\n          </div>\n          <span className=\"text-sm\">Recommanded for heavy images on low configuration</span>\n        </div>\n        <div className=\"flex self-end\">\n          <button className=\"btn btn-primary\" disabled={!validForm} onClick={submit}>Generate</button>\n        </div>\n      </div>\n   );\n\n    return (\n      <div className=\"card glass text-neutral-content\">\n        {content}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-img\">\n      <div className=\"container mx-auto flex flex-col gap-10 bg-neutral\">\n        <NavBar/>\n        <div className=\"flex flex-col px-4 flex flex-col gap-5\" >\n          <div className=\"alert alert-warning\">\n            <div className=\"flex-1\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\"> \n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n              </svg> \n              <label>The algorithm is resource intensive. So it may not finish on mobile phone or low configuration. Please consider resize option</label>\n            </div>\n          </div>\n            {\n              !openCVLoaded ?\n              (<div className=\"flex flex-col items-center\">\n                <Loader/>\n                Loading OpenCV library\n              </div>)\n              :\n              renderForm()\n            }\n            <img className=\"hidden\" id=\"imageSrc\" alt=\"No Image\" ref={ref} onLoad={() => setValidForm(true)}/>\n            <div className=\"w-full flex flex-col items-center gap-3 pt-5 border rounded-box\">\n              <h2 className=\"text-xl font-bold text-neutral-content\">Results</h2>\n              <Stepper steps={ProcessStateMachineArray} currentStep={progress} />\n              {renderAllCanvas()}\n            </div>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}